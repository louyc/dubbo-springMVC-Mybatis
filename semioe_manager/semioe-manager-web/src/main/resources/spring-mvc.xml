<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans          
    http://www.springframework.org/schema/beans/spring-beans.xsd          
    http://code.alibabatech.com/schema/dubbo          
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean 并将bean依赖注入，即dubbo服务端暴露的Service注入到Controller中 -->
	<dubbo:annotation package="com.semioe.web.controller" />

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- json转换器 -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="viewResolver2"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/html/" />
		<property name="suffix" value=".html" />
		<property name="order" value="2" />
	</bean>

	<mvc:default-servlet-handler />

	<mvc:resources mapping="/html/**" location="/html/" />
	<mvc:resources mapping="/upFile/**" location="/upFile/" />
	<mvc:resources mapping="/static/**" location="/static/" />
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过40MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="41943040" />
		<property name="resolveLazily" value="true"/>
	</bean>
	
	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<!-- <bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">/WEB-INF/index.jsp</prop>
			</props>
		</property>
	</bean> -->

	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />

			<mvc:exclude-mapping path="/user/login/submit" />
			<mvc:exclude-mapping path="/user/regist/submit" />
			<mvc:exclude-mapping path="/file/upload" />
			<mvc:exclude-mapping path="/html/**" />
			样式引用目录
			<mvc:exclude-mapping path="/css/**" />
			<mvc:exclude-mapping path="/image/**" />
			<mvc:exclude-mapping path="/js/**" />
			<mvc:exclude-mapping path="/layui/**" />
			<mvc:exclude-mapping path="/videos/**" />
			图片文件
			<mvc:exclude-mapping path="/upFile/**"/>
			
			登录相关
			<mvc:exclude-mapping path="/index.html" />
			<mvc:exclude-mapping path="/login.html"/>
			<mvc:exclude-mapping path="/" />
			<mvc:exclude-mapping path="/monitoring"/>
			<mvc:exclude-mapping path="/monitoring/**"/>

			<bean class="com.semioe.web.Interceptor.AutorizadorInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy/>
	<context:component-scan base-package="com.semioe.web.controller.limit"/>
	<context:component-scan base-package="com.semioe.web.controller" />
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<mvc:annotation-driven />
	<context:component-scan base-package="com.semioe.web">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

</beans>  

