package com.semioe.api.entity;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ApiContractedUserExample implements Serializable {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public ApiContractedUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2,
				String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException(
						"Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
				String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andManagerIdIsNull() {
			addCriterion("manager_id is null");
			return (Criteria) this;
		}

		public Criteria andManagerIdIsNotNull() {
			addCriterion("manager_id is not null");
			return (Criteria) this;
		}

		public Criteria andManagerIdEqualTo(String value) {
			addCriterion("manager_id =", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotEqualTo(String value) {
			addCriterion("manager_id <>", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdGreaterThan(String value) {
			addCriterion("manager_id >", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdGreaterThanOrEqualTo(String value) {
			addCriterion("manager_id >=", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdLessThan(String value) {
			addCriterion("manager_id <", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdLessThanOrEqualTo(String value) {
			addCriterion("manager_id <=", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdLike(String value) {
			addCriterion("manager_id like", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotLike(String value) {
			addCriterion("manager_id not like", value, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdIn(List<String> values) {
			addCriterion("manager_id in", values, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotIn(List<String> values) {
			addCriterion("manager_id not in", values, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdBetween(String value1, String value2) {
			addCriterion("manager_id between", value1, value2, "managerId");
			return (Criteria) this;
		}

		public Criteria andManagerIdNotBetween(String value1, String value2) {
			addCriterion("manager_id not between", value1, value2, "managerId");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andSexIsNull() {
			addCriterion("sex is null");
			return (Criteria) this;
		}

		public Criteria andSexIsNotNull() {
			addCriterion("sex is not null");
			return (Criteria) this;
		}

		public Criteria andSexEqualTo(Integer value) {
			addCriterion("sex =", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotEqualTo(Integer value) {
			addCriterion("sex <>", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThan(Integer value) {
			addCriterion("sex >", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexGreaterThanOrEqualTo(Integer value) {
			addCriterion("sex >=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThan(Integer value) {
			addCriterion("sex <", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexLessThanOrEqualTo(Integer value) {
			addCriterion("sex <=", value, "sex");
			return (Criteria) this;
		}

		public Criteria andSexIn(List<Integer> values) {
			addCriterion("sex in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotIn(List<Integer> values) {
			addCriterion("sex not in", values, "sex");
			return (Criteria) this;
		}

		public Criteria andSexBetween(Integer value1, Integer value2) {
			addCriterion("sex between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andSexNotBetween(Integer value1, Integer value2) {
			addCriterion("sex not between", value1, value2, "sex");
			return (Criteria) this;
		}

		public Criteria andCardIdIsNull() {
			addCriterion("card_id is null");
			return (Criteria) this;
		}

		public Criteria andCardIdIsNotNull() {
			addCriterion("card_id is not null");
			return (Criteria) this;
		}

		public Criteria andCardIdEqualTo(String value) {
			addCriterion("card_id =", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotEqualTo(String value) {
			addCriterion("card_id <>", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdGreaterThan(String value) {
			addCriterion("card_id >", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdGreaterThanOrEqualTo(String value) {
			addCriterion("card_id >=", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLessThan(String value) {
			addCriterion("card_id <", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLessThanOrEqualTo(String value) {
			addCriterion("card_id <=", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdLike(String value) {
			addCriterion("card_id like", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotLike(String value) {
			addCriterion("card_id not like", value, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdIn(List<String> values) {
			addCriterion("card_id in", values, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotIn(List<String> values) {
			addCriterion("card_id not in", values, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdBetween(String value1, String value2) {
			addCriterion("card_id between", value1, value2, "cardId");
			return (Criteria) this;
		}

		public Criteria andCardIdNotBetween(String value1, String value2) {
			addCriterion("card_id not between", value1, value2, "cardId");
			return (Criteria) this;
		}

		public Criteria andBirthdayIsNull() {
			addCriterion("birthday is null");
			return (Criteria) this;
		}

		public Criteria andBirthdayIsNotNull() {
			addCriterion("birthday is not null");
			return (Criteria) this;
		}

		public Criteria andBirthdayEqualTo(Date value) {
			addCriterionForJDBCDate("birthday =", value, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayNotEqualTo(Date value) {
			addCriterionForJDBCDate("birthday <>", value, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayGreaterThan(Date value) {
			addCriterionForJDBCDate("birthday >", value, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("birthday >=", value, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayLessThan(Date value) {
			addCriterionForJDBCDate("birthday <", value, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("birthday <=", value, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayIn(List<Date> values) {
			addCriterionForJDBCDate("birthday in", values, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayNotIn(List<Date> values) {
			addCriterionForJDBCDate("birthday not in", values, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("birthday between", value1, value2, "birthday");
			return (Criteria) this;
		}

		public Criteria andBirthdayNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("birthday not between", value1, value2, "birthday");
			return (Criteria) this;
		}

		public Criteria andContactPeopleIsNull() {
			addCriterion("contact_people is null");
			return (Criteria) this;
		}

		public Criteria andContactPeopleIsNotNull() {
			addCriterion("contact_people is not null");
			return (Criteria) this;
		}

		public Criteria andContactPeopleEqualTo(String value) {
			addCriterion("contact_people =", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleNotEqualTo(String value) {
			addCriterion("contact_people <>", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleGreaterThan(String value) {
			addCriterion("contact_people >", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleGreaterThanOrEqualTo(String value) {
			addCriterion("contact_people >=", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleLessThan(String value) {
			addCriterion("contact_people <", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleLessThanOrEqualTo(String value) {
			addCriterion("contact_people <=", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleLike(String value) {
			addCriterion("contact_people like", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleNotLike(String value) {
			addCriterion("contact_people not like", value, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleIn(List<String> values) {
			addCriterion("contact_people in", values, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleNotIn(List<String> values) {
			addCriterion("contact_people not in", values, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleBetween(String value1, String value2) {
			addCriterion("contact_people between", value1, value2, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactPeopleNotBetween(String value1, String value2) {
			addCriterion("contact_people not between", value1, value2, "contactPeople");
			return (Criteria) this;
		}

		public Criteria andContactMobileIsNull() {
			addCriterion("contact_mobile is null");
			return (Criteria) this;
		}

		public Criteria andContactMobileIsNotNull() {
			addCriterion("contact_mobile is not null");
			return (Criteria) this;
		}

		public Criteria andContactMobileEqualTo(String value) {
			addCriterion("contact_mobile =", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileNotEqualTo(String value) {
			addCriterion("contact_mobile <>", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileGreaterThan(String value) {
			addCriterion("contact_mobile >", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileGreaterThanOrEqualTo(String value) {
			addCriterion("contact_mobile >=", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileLessThan(String value) {
			addCriterion("contact_mobile <", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileLessThanOrEqualTo(String value) {
			addCriterion("contact_mobile <=", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileLike(String value) {
			addCriterion("contact_mobile like", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileNotLike(String value) {
			addCriterion("contact_mobile not like", value, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileIn(List<String> values) {
			addCriterion("contact_mobile in", values, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileNotIn(List<String> values) {
			addCriterion("contact_mobile not in", values, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileBetween(String value1, String value2) {
			addCriterion("contact_mobile between", value1, value2, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andContactMobileNotBetween(String value1, String value2) {
			addCriterion("contact_mobile not between", value1, value2, "contactMobile");
			return (Criteria) this;
		}

		public Criteria andResidentTypeIsNull() {
			addCriterion("resident_type is null");
			return (Criteria) this;
		}

		public Criteria andResidentTypeIsNotNull() {
			addCriterion("resident_type is not null");
			return (Criteria) this;
		}

		public Criteria andResidentTypeEqualTo(Integer value) {
			addCriterion("resident_type =", value, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeNotEqualTo(Integer value) {
			addCriterion("resident_type <>", value, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeGreaterThan(Integer value) {
			addCriterion("resident_type >", value, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("resident_type >=", value, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeLessThan(Integer value) {
			addCriterion("resident_type <", value, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeLessThanOrEqualTo(Integer value) {
			addCriterion("resident_type <=", value, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeIn(List<Integer> values) {
			addCriterion("resident_type in", values, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeNotIn(List<Integer> values) {
			addCriterion("resident_type not in", values, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeBetween(Integer value1, Integer value2) {
			addCriterion("resident_type between", value1, value2, "residentType");
			return (Criteria) this;
		}

		public Criteria andResidentTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("resident_type not between", value1, value2, "residentType");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressIsNull() {
			addCriterion("permanent_address is null");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressIsNotNull() {
			addCriterion("permanent_address is not null");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressEqualTo(String value) {
			addCriterion("permanent_address =", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressNotEqualTo(String value) {
			addCriterion("permanent_address <>", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressGreaterThan(String value) {
			addCriterion("permanent_address >", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressGreaterThanOrEqualTo(String value) {
			addCriterion("permanent_address >=", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressLessThan(String value) {
			addCriterion("permanent_address <", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressLessThanOrEqualTo(String value) {
			addCriterion("permanent_address <=", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressLike(String value) {
			addCriterion("permanent_address like", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressNotLike(String value) {
			addCriterion("permanent_address not like", value, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressIn(List<String> values) {
			addCriterion("permanent_address in", values, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressNotIn(List<String> values) {
			addCriterion("permanent_address not in", values, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressBetween(String value1, String value2) {
			addCriterion("permanent_address between", value1, value2, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andPermanentAddressNotBetween(String value1, String value2) {
			addCriterion("permanent_address not between", value1, value2, "permanentAddress");
			return (Criteria) this;
		}

		public Criteria andNationIsNull() {
			addCriterion("nation is null");
			return (Criteria) this;
		}

		public Criteria andNationIsNotNull() {
			addCriterion("nation is not null");
			return (Criteria) this;
		}

		public Criteria andNationEqualTo(Integer value) {
			addCriterion("nation =", value, "nation");
			return (Criteria) this;
		}

		public Criteria andNationNotEqualTo(Integer value) {
			addCriterion("nation <>", value, "nation");
			return (Criteria) this;
		}

		public Criteria andNationGreaterThan(Integer value) {
			addCriterion("nation >", value, "nation");
			return (Criteria) this;
		}

		public Criteria andNationGreaterThanOrEqualTo(Integer value) {
			addCriterion("nation >=", value, "nation");
			return (Criteria) this;
		}

		public Criteria andNationLessThan(Integer value) {
			addCriterion("nation <", value, "nation");
			return (Criteria) this;
		}

		public Criteria andNationLessThanOrEqualTo(Integer value) {
			addCriterion("nation <=", value, "nation");
			return (Criteria) this;
		}

		public Criteria andNationIn(List<Integer> values) {
			addCriterion("nation in", values, "nation");
			return (Criteria) this;
		}

		public Criteria andNationNotIn(List<Integer> values) {
			addCriterion("nation not in", values, "nation");
			return (Criteria) this;
		}

		public Criteria andNationBetween(Integer value1, Integer value2) {
			addCriterion("nation between", value1, value2, "nation");
			return (Criteria) this;
		}

		public Criteria andNationNotBetween(Integer value1, Integer value2) {
			addCriterion("nation not between", value1, value2, "nation");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusIsNull() {
			addCriterion("marital_status is null");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusIsNotNull() {
			addCriterion("marital_status is not null");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusEqualTo(Integer value) {
			addCriterion("marital_status =", value, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusNotEqualTo(Integer value) {
			addCriterion("marital_status <>", value, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusGreaterThan(Integer value) {
			addCriterion("marital_status >", value, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("marital_status >=", value, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusLessThan(Integer value) {
			addCriterion("marital_status <", value, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusLessThanOrEqualTo(Integer value) {
			addCriterion("marital_status <=", value, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusIn(List<Integer> values) {
			addCriterion("marital_status in", values, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusNotIn(List<Integer> values) {
			addCriterion("marital_status not in", values, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusBetween(Integer value1, Integer value2) {
			addCriterion("marital_status between", value1, value2, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andMaritalStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("marital_status not between", value1, value2, "maritalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusIsNull() {
			addCriterion("cultural_status is null");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusIsNotNull() {
			addCriterion("cultural_status is not null");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusEqualTo(Integer value) {
			addCriterion("cultural_status =", value, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusNotEqualTo(Integer value) {
			addCriterion("cultural_status <>", value, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusGreaterThan(Integer value) {
			addCriterion("cultural_status >", value, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("cultural_status >=", value, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusLessThan(Integer value) {
			addCriterion("cultural_status <", value, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusLessThanOrEqualTo(Integer value) {
			addCriterion("cultural_status <=", value, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusIn(List<Integer> values) {
			addCriterion("cultural_status in", values, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusNotIn(List<Integer> values) {
			addCriterion("cultural_status not in", values, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusBetween(Integer value1, Integer value2) {
			addCriterion("cultural_status between", value1, value2, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andCulturalStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("cultural_status not between", value1, value2, "culturalStatus");
			return (Criteria) this;
		}

		public Criteria andOccupationIsNull() {
			addCriterion("occupation is null");
			return (Criteria) this;
		}

		public Criteria andOccupationIsNotNull() {
			addCriterion("occupation is not null");
			return (Criteria) this;
		}

		public Criteria andOccupationEqualTo(Integer value) {
			addCriterion("occupation =", value, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationNotEqualTo(Integer value) {
			addCriterion("occupation <>", value, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationGreaterThan(Integer value) {
			addCriterion("occupation >", value, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationGreaterThanOrEqualTo(Integer value) {
			addCriterion("occupation >=", value, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationLessThan(Integer value) {
			addCriterion("occupation <", value, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationLessThanOrEqualTo(Integer value) {
			addCriterion("occupation <=", value, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationIn(List<Integer> values) {
			addCriterion("occupation in", values, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationNotIn(List<Integer> values) {
			addCriterion("occupation not in", values, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationBetween(Integer value1, Integer value2) {
			addCriterion("occupation between", value1, value2, "occupation");
			return (Criteria) this;
		}

		public Criteria andOccupationNotBetween(Integer value1, Integer value2) {
			addCriterion("occupation not between", value1, value2, "occupation");
			return (Criteria) this;
		}

		public Criteria andWorkUnitIsNull() {
			addCriterion("work_unit is null");
			return (Criteria) this;
		}

		public Criteria andWorkUnitIsNotNull() {
			addCriterion("work_unit is not null");
			return (Criteria) this;
		}

		public Criteria andWorkUnitEqualTo(String value) {
			addCriterion("work_unit =", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitNotEqualTo(String value) {
			addCriterion("work_unit <>", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitGreaterThan(String value) {
			addCriterion("work_unit >", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitGreaterThanOrEqualTo(String value) {
			addCriterion("work_unit >=", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitLessThan(String value) {
			addCriterion("work_unit <", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitLessThanOrEqualTo(String value) {
			addCriterion("work_unit <=", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitLike(String value) {
			addCriterion("work_unit like", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitNotLike(String value) {
			addCriterion("work_unit not like", value, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitIn(List<String> values) {
			addCriterion("work_unit in", values, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitNotIn(List<String> values) {
			addCriterion("work_unit not in", values, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitBetween(String value1, String value2) {
			addCriterion("work_unit between", value1, value2, "workUnit");
			return (Criteria) this;
		}

		public Criteria andWorkUnitNotBetween(String value1, String value2) {
			addCriterion("work_unit not between", value1, value2, "workUnit");
			return (Criteria) this;
		}

		public Criteria andPresentAddressIsNull() {
			addCriterion("present_address is null");
			return (Criteria) this;
		}

		public Criteria andPresentAddressIsNotNull() {
			addCriterion("present_address is not null");
			return (Criteria) this;
		}

		public Criteria andPresentAddressEqualTo(String value) {
			addCriterion("present_address =", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressNotEqualTo(String value) {
			addCriterion("present_address <>", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressGreaterThan(String value) {
			addCriterion("present_address >", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressGreaterThanOrEqualTo(String value) {
			addCriterion("present_address >=", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressLessThan(String value) {
			addCriterion("present_address <", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressLessThanOrEqualTo(String value) {
			addCriterion("present_address <=", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressLike(String value) {
			addCriterion("present_address like", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressNotLike(String value) {
			addCriterion("present_address not like", value, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressIn(List<String> values) {
			addCriterion("present_address in", values, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressNotIn(List<String> values) {
			addCriterion("present_address not in", values, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressBetween(String value1, String value2) {
			addCriterion("present_address between", value1, value2, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andPresentAddressNotBetween(String value1, String value2) {
			addCriterion("present_address not between", value1, value2, "presentAddress");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeIsNull() {
			addCriterion("medical_type is null");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeIsNotNull() {
			addCriterion("medical_type is not null");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeEqualTo(Integer value) {
			addCriterion("medical_type =", value, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeNotEqualTo(Integer value) {
			addCriterion("medical_type <>", value, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeGreaterThan(Integer value) {
			addCriterion("medical_type >", value, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("medical_type >=", value, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeLessThan(Integer value) {
			addCriterion("medical_type <", value, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeLessThanOrEqualTo(Integer value) {
			addCriterion("medical_type <=", value, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeIn(List<Integer> values) {
			addCriterion("medical_type in", values, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeNotIn(List<Integer> values) {
			addCriterion("medical_type not in", values, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeBetween(Integer value1, Integer value2) {
			addCriterion("medical_type between", value1, value2, "medicalType");
			return (Criteria) this;
		}

		public Criteria andMedicalTypeNotBetween(Integer value1, Integer value2) {
			addCriterion("medical_type not between", value1, value2, "medicalType");
			return (Criteria) this;
		}

		public Criteria andBloodyIsNull() {
			addCriterion("bloody is null");
			return (Criteria) this;
		}

		public Criteria andBloodyIsNotNull() {
			addCriterion("bloody is not null");
			return (Criteria) this;
		}

		public Criteria andBloodyEqualTo(Integer value) {
			addCriterion("bloody =", value, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyNotEqualTo(Integer value) {
			addCriterion("bloody <>", value, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyGreaterThan(Integer value) {
			addCriterion("bloody >", value, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyGreaterThanOrEqualTo(Integer value) {
			addCriterion("bloody >=", value, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyLessThan(Integer value) {
			addCriterion("bloody <", value, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyLessThanOrEqualTo(Integer value) {
			addCriterion("bloody <=", value, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyIn(List<Integer> values) {
			addCriterion("bloody in", values, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyNotIn(List<Integer> values) {
			addCriterion("bloody not in", values, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyBetween(Integer value1, Integer value2) {
			addCriterion("bloody between", value1, value2, "bloody");
			return (Criteria) this;
		}

		public Criteria andBloodyNotBetween(Integer value1, Integer value2) {
			addCriterion("bloody not between", value1, value2, "bloody");
			return (Criteria) this;
		}

		public Criteria andRhIsNull() {
			addCriterion("rh is null");
			return (Criteria) this;
		}

		public Criteria andRhIsNotNull() {
			addCriterion("rh is not null");
			return (Criteria) this;
		}

		public Criteria andRhEqualTo(Integer value) {
			addCriterion("rh =", value, "rh");
			return (Criteria) this;
		}

		public Criteria andRhNotEqualTo(Integer value) {
			addCriterion("rh <>", value, "rh");
			return (Criteria) this;
		}

		public Criteria andRhGreaterThan(Integer value) {
			addCriterion("rh >", value, "rh");
			return (Criteria) this;
		}

		public Criteria andRhGreaterThanOrEqualTo(Integer value) {
			addCriterion("rh >=", value, "rh");
			return (Criteria) this;
		}

		public Criteria andRhLessThan(Integer value) {
			addCriterion("rh <", value, "rh");
			return (Criteria) this;
		}

		public Criteria andRhLessThanOrEqualTo(Integer value) {
			addCriterion("rh <=", value, "rh");
			return (Criteria) this;
		}

		public Criteria andRhIn(List<Integer> values) {
			addCriterion("rh in", values, "rh");
			return (Criteria) this;
		}

		public Criteria andRhNotIn(List<Integer> values) {
			addCriterion("rh not in", values, "rh");
			return (Criteria) this;
		}

		public Criteria andRhBetween(Integer value1, Integer value2) {
			addCriterion("rh between", value1, value2, "rh");
			return (Criteria) this;
		}

		public Criteria andRhNotBetween(Integer value1, Integer value2) {
			addCriterion("rh not between", value1, value2, "rh");
			return (Criteria) this;
		}

		public Criteria andExpirationDateIsNull() {
			addCriterion("expiration_date is null");
			return (Criteria) this;
		}

		public Criteria andExpirationDateIsNotNull() {
			addCriterion("expiration_date is not null");
			return (Criteria) this;
		}

		public Criteria andExpirationDateEqualTo(Date value) {
			addCriterionForJDBCDate("expiration_date =", value, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("expiration_date <>", value, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateGreaterThan(Date value) {
			addCriterionForJDBCDate("expiration_date >", value, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("expiration_date >=", value, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateLessThan(Date value) {
			addCriterionForJDBCDate("expiration_date <", value, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("expiration_date <=", value, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateIn(List<Date> values) {
			addCriterionForJDBCDate("expiration_date in", values, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("expiration_date not in", values, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("expiration_date between", value1, value2, "expirationDate");
			return (Criteria) this;
		}

		public Criteria andExpirationDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("expiration_date not between", value1, value2,
					"expirationDate");
			return (Criteria) this;
		}

		public Criteria andYearsIsNull() {
			addCriterion("years is null");
			return (Criteria) this;
		}

		public Criteria andYearsIsNotNull() {
			addCriterion("years is not null");
			return (Criteria) this;
		}

		public Criteria andYearsEqualTo(Integer value) {
			addCriterion("years =", value, "years");
			return (Criteria) this;
		}

		public Criteria andYearsNotEqualTo(Integer value) {
			addCriterion("years <>", value, "years");
			return (Criteria) this;
		}

		public Criteria andYearsGreaterThan(Integer value) {
			addCriterion("years >", value, "years");
			return (Criteria) this;
		}

		public Criteria andYearsGreaterThanOrEqualTo(Integer value) {
			addCriterion("years >=", value, "years");
			return (Criteria) this;
		}

		public Criteria andYearsLessThan(Integer value) {
			addCriterion("years <", value, "years");
			return (Criteria) this;
		}

		public Criteria andYearsLessThanOrEqualTo(Integer value) {
			addCriterion("years <=", value, "years");
			return (Criteria) this;
		}

		public Criteria andYearsIn(List<Integer> values) {
			addCriterion("years in", values, "years");
			return (Criteria) this;
		}

		public Criteria andYearsNotIn(List<Integer> values) {
			addCriterion("years not in", values, "years");
			return (Criteria) this;
		}

		public Criteria andYearsBetween(Integer value1, Integer value2) {
			addCriterion("years between", value1, value2, "years");
			return (Criteria) this;
		}

		public Criteria andYearsNotBetween(Integer value1, Integer value2) {
			addCriterion("years not between", value1, value2, "years");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterionForJDBCDate("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterionForJDBCDate("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterionForJDBCDate("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("create_time not between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNull() {
			addCriterion("update_time is null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIsNotNull() {
			addCriterion("update_time is not null");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeEqualTo(Date value) {
			addCriterionForJDBCDate("update_time =", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("update_time <>", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("update_time >", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("update_time >=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThan(Date value) {
			addCriterionForJDBCDate("update_time <", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("update_time <=", value, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeIn(List<Date> values) {
			addCriterionForJDBCDate("update_time in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("update_time not in", values, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("update_time between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("update_time not between", value1, value2, "updateTime");
			return (Criteria) this;
		}

		public Criteria andInUseIsNull() {
			addCriterion("in_use is null");
			return (Criteria) this;
		}

		public Criteria andInUseIsNotNull() {
			addCriterion("in_use is not null");
			return (Criteria) this;
		}

		public Criteria andInUseEqualTo(Integer value) {
			addCriterion("in_use =", value, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseNotEqualTo(Integer value) {
			addCriterion("in_use <>", value, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseGreaterThan(Integer value) {
			addCriterion("in_use >", value, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseGreaterThanOrEqualTo(Integer value) {
			addCriterion("in_use >=", value, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseLessThan(Integer value) {
			addCriterion("in_use <", value, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseLessThanOrEqualTo(Integer value) {
			addCriterion("in_use <=", value, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseIn(List<Integer> values) {
			addCriterion("in_use in", values, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseNotIn(List<Integer> values) {
			addCriterion("in_use not in", values, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseBetween(Integer value1, Integer value2) {
			addCriterion("in_use between", value1, value2, "inUse");
			return (Criteria) this;
		}

		public Criteria andInUseNotBetween(Integer value1, Integer value2) {
			addCriterion("in_use not between", value1, value2, "inUse");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table api_contracted_user
	 *
	 * @mbg.generated do_not_delete_during_merge
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table api_contracted_user
	 *
	 * @mbg.generated
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}