<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.UserDoctorRelMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.UserDoctorRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contracted_user_id" jdbcType="INTEGER" property="contractedUserId" />
    <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="symptom" jdbcType="VARCHAR" property="symptom" />
    <result column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="expiration_date" jdbcType="TIMESTAMP" property="expirationDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="build_type" jdbcType="INTEGER" property="buildType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, contracted_user_id, manager_id,doctor_id, expiration_date, create_time, update_time, in_use,build_type
    ,symptom
  </sql>
  <select id="selectByExample" parameterType="com.semioe.api.entity.UserDoctorRelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_doctor_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_doctor_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_doctor_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.UserDoctorRelExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_doctor_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.UserDoctorRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_doctor_rel (contracted_user_id,manager_id, doctor_id, expiration_date, 
      create_time, update_time, in_use
      )
    values (#{contractedUserId,jdbcType=INTEGER}, #{managerId,jdbcType=VARCHAR},
    #{doctorId,jdbcType=VARCHAR}, #{expirationDate,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{inUse,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.UserDoctorRel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_doctor_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractedUserId != null">
        contracted_user_id,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="symptom != null and symptom!=''">
        symptom,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="expirationDate != null">
        expiration_date,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
      <if test="buildType != null">
        build_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractedUserId != null">
        #{contractedUserId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="symptom != null and symptom!=''">
        #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="expirationDate != null">
        #{expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
       <if test="buildType != null">
        #{buildType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.UserDoctorRelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_doctor_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_doctor_rel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contractedUserId != null">
        contracted_user_id = #{record.contractedUserId,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=VARCHAR},
      </if>
      <if test="record.expirationDate != null">
        expiration_date = #{record.expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_doctor_rel
    set id = #{record.id,jdbcType=INTEGER},
      contracted_user_id = #{record.contractedUserId,jdbcType=INTEGER},
      manager_id = #{record.managerId,jdbcType=VARCHAR},
      doctor_id = #{record.doctorId,jdbcType=VARCHAR},
      expiration_date = #{record.expirationDate,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.UserDoctorRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_doctor_rel
    <set>
      <if test="contractedUserId != null">
        contracted_user_id = #{contractedUserId,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="expirationDate != null">
        expiration_date = #{expirationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.UserDoctorRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_doctor_rel
    set contracted_user_id = #{contractedUserId,jdbcType=INTEGER},
      manager_id = #{managerId,jdbcType=VARCHAR},
      doctor_id = #{doctorId,jdbcType=VARCHAR},
      expiration_date = #{expirationDate,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByManagerId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select r.* from user_doctor_rel r left join api_contracted_user u
	on r.contracted_user_id = u.id 
	where u.manager_id = #{managerId,jdbcType=VARCHAR} 
	and r.in_use ='1' and r.build_type=1
  </select>
  
  <delete id="deleteByUserId" parameterType="java.lang.Integer">
    delete from  user_doctor_rel
    where contracted_user_id = #{userId,jdbcType=INTEGER}
    and build_type=1
  </delete>
  
   <select id="selectByMangerId" parameterType="java.lang.String" resultType="com.semioe.api.vo.BackstageUserInfoVO">
     select 
     r.id,
     u.manager_id as managerId, u.name, u.image_url as imageUrl, u.type, u.address, u.company, skills, title, 
     u.role_id as roleId, u.user_status as userStatus, email, mobile, `desc`,
     r.in_use as inUse,r.create_time as createTime,
	 r.expiration_date as expirationDate,
	 d.org_id as designOrgId,
	 r.build_type as buildType
     from user_doctor_rel r
     left join backstage_user_info u on r.doctor_id = u.manager_id
     left join jy_org_doc_rel d on r.doctor_id = d.doctor_id
     where r.manager_id = #{managerId,jdbcType=VARCHAR} and r.in_use=1 and r.build_type !=2
  </select>
  
   <select id="selectByEntity" parameterType="com.semioe.api.entity.UserDoctorRel" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_doctor_rel
    where in_use=1
    <if test="managerId != null and managerId!=''">
      AND manager_id  = #{managerId,jdbcType=VARCHAR}
    </if>
    <if test="doctorId != null and doctorId!='' and buildType==2">
     AND doctor_id  = #{doctorId,jdbcType=VARCHAR}
    </if>
    <if test="buildType != null and buildType>0">
     AND build_type  = #{buildType,jdbcType=INTEGER}
    </if>
  </select>
  
   <update id="updateInuse" parameterType="java.lang.Integer">
    update user_doctor_rel
    set in_use = 0
      where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>