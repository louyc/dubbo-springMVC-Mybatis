<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.BackstageUserInfoMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.BackstageUserInfo">
    <id column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="skills" jdbcType="VARCHAR" property="skills" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="certifications_url" jdbcType="VARCHAR" property="certificationsUrl" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    
    <result column="doctor_sign_type" jdbcType="INTEGER" property="doctorSignType" />
	<result column="doctor_out_time" jdbcType="TIMESTAMP" property="doctorOutTime" />
	
	<result column="province_code" jdbcType="CHAR" property="provinceCode" />
	<result column="city_code" jdbcType="CHAR" property="cityCode" />
	<result column="town_code" jdbcType="CHAR" property="townCode" />
    
    
  </resultMap>
  <resultMap id="BaseVOResultMap" type="com.semioe.api.vo.BackstageUserInfoVO">
    <result column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="skills" jdbcType="VARCHAR" property="skills" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="certifications_url" jdbcType="VARCHAR" property="certificationsUrl" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    
    <result column="doctor_sign_type" jdbcType="INTEGER" property="doctorSignType" />
	<result column="doctor_out_time" jdbcType="TIMESTAMP" property="doctorOutTime" />
    
    <result column="province_code" jdbcType="CHAR" property="provinceCode" />
	<result column="city_code" jdbcType="CHAR" property="cityCode" />
	<result column="town_code" jdbcType="CHAR" property="townCode" />
    
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    manager_id, name, image_url, type, address, company, skills, title, certifications_url, 
    role_id, user_status, email, mobile, create_time, update_time, in_use,`desc` 
    , doctor_sign_type , doctor_out_time , province_code , city_code , town_code
  </sql>
  <select id="selectByExample" parameterType="com.semioe.api.entity.BackstageUserInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from backstage_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from backstage_user_info
    where manager_id = #{managerId,jdbcType=VARCHAR}
    
  </select>
  
  <select id="selectInfoVOByPrimaryKey" parameterType="java.lang.String" resultMap="BaseVOResultMap">
    SELECT  d.manager_id, d.name, d.image_url, d.type, d.address, d.company, d.skills, 
    d.title, d.certifications_url, 
    d.role_id, d.user_status, d.email, d.mobile, d.create_time, d.update_time, d.in_use,d.`desc` 
    , d.doctor_sign_type , d.doctor_out_time , d.province_code , d.city_code , d.town_code,
    d.dept_id as deptId,
    dd.name AS deptName 
    FROM (
		SELECT 
		b.*,r.id,r.`dept_id`
		FROM backstage_user_info b
		LEFT JOIN department_rel r ON b.`manager_id` = r.`manager_id`
		WHERE b.manager_id = #{managerId,jdbcType=VARCHAR}
	)d
	LEFT JOIN department_dic dd ON d.dept_id = dd.`id`
	WHERE  d.in_use = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from backstage_user_info
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.BackstageUserInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from backstage_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.BackstageUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into backstage_user_info (manager_id, name, image_url, 
      type, address, company, 
      skills, title, certifications_url, 
      role_id, user_status, email, 
      mobile, create_time, update_time, 
      in_use,`desc` ,  province_code , city_code , town_code )
    values (#{managerId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{skills,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{certificationsUrl,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER}, #{userStatus,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{inUse,jdbcType=INTEGER},#{desc,jdbcType=VARCHAR},
      #{provinceCode,jdbcType=CHAR},#{cityCode,jdbcType=CHAR},#{townCode,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.BackstageUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into backstage_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="skills != null">
        skills,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="certificationsUrl != null">
        certifications_url,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      
      <if test="provinceCode != null">
        province_code,
      </if>
      
      <if test="cityCode != null">
        city_code,
      </if>
      
      <if test="townCode != null">
        town_code,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="skills != null">
        #{skills,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="certificationsUrl != null">
        #{certificationsUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      
      <if test="provinceCode != null">
        #{provinceCode,jdbcType=CHAR},
      </if>
      
      <if test="cityCode != null">
        #{cityCode,jdbcType=CHAR},
      </if>
      
      <if test="townCode != null">
        #{townCode,jdbcType=CHAR},
      </if>
      
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.BackstageUserInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from backstage_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update backstage_user_info
    <set>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.skills != null">
        skills = #{record.skills,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.certificationsUrl != null">
        certifications_url = #{record.certificationsUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
      <if test="record.desc != null">
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update backstage_user_info
    set manager_id = #{record.managerId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      skills = #{record.skills,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      certifications_url = #{record.certificationsUrl,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      province_code = #{provinceCode,jdbcType=CHAR},
      city_code = #{cityCode,jdbcType=CHAR},
      town_code = #{townCode,jdbcType=CHAR}
      
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.BackstageUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update backstage_user_info
    <set>
   	  <if test="inUse != null and inUse>-1">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
      <if test="name != null and name != ''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null and imageUrl != ''">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null and type!= ''">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address != ''">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null and company != ''">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="skills != null and skills != ''">
        skills = #{skills,jdbcType=VARCHAR},
      </if>
      <if test="title != null and title != ''">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="certificationsUrl != null and certificationsUrl != ''">
        certifications_url = #{certificationsUrl,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null and roleId != ''">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null and userStatus != ''">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime!= ''">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime !=''">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="desc != null and desc !=''">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      
      <if test="provinceCode != null and provinceCode !=''">
        province_code = #{provinceCode,jdbcType=CHAR},
      </if>
      
      <if test="cityCode != null and cityCode !=''">
        city_code = #{cityCode,jdbcType=CHAR},
      </if>
      
      <if test="townCode != null and townCode !=''">
        town_code = #{townCode,jdbcType=CHAR},
      </if>
      
    </set>
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.BackstageUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update backstage_user_info
    set name = #{name,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      skills = #{skills,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      certifications_url = #{certificationsUrl,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER},
      `desc` = #{desc,jdbcType=VARCHAR},
      province_code = #{provinceCode,jdbcType=CHAR},
      city_code = #{cityCode,jdbcType=CHAR},
      town_code = #{townCode,jdbcType=CHAR}
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </update>
  <select id="selectByCondition" parameterType="java.util.Map" 
  resultType="com.semioe.api.vo.BackstageUserInfoVO">
	  select * from (
	    SELECT 
		    b.manager_id AS managerId, b.name, image_url AS imageUrl, TYPE, 
		    address, company, skills, 
		    title, certifications_url as certificationsUrl, 
		    role_id as roleId, user_status as userStatus, email, mobile, create_time, 
		    update_time, in_use AS inUse,`desc` 
		    , doctor_sign_type as doctorSignType, doctor_out_time as doctorOutTime, province_code , city_code , town_code,
		    GROUP_CONCAT(dept.`dept_id`) AS deptIds,GROUP_CONCAT(dept.name) AS deptNames,
		    GROUP_CONCAT(tag.tag_id) AS tagIds,GROUP_CONCAT(tag.name) AS tagNames
	    FROM backstage_user_info b
	    LEFT JOIN (
			SELECT r.dept_id,r.manager_id,d.name FROM department_rel r LEFT JOIN department_dic d
			ON r.dept_id = d.id
	    )dept ON  b.`manager_id` = dept.`manager_id`
	    LEFT JOIN(
	    	SELECT tr.tag_id,tr.manager_id,t.name FROM tags_rel tr LEFT JOIN tags_dic t
		ON tr.tag_id = t.id
	    )tag ON b.`manager_id` = tag.manager_id
	      <where>
		      <if test="name != null and name!=''">
		        and b.name like #{name,jdbcType=VARCHAR}
		      </if>
		      <if test="roleId != null">
		        and role_id = #{roleId,jdbcType=INTEGER}
		      </if>
		      <if test="userStatus != null">
		        and user_status = #{userStatus,jdbcType=INTEGER}
		      </if>
		      <if test="inUse != null">
		        and in_use = #{inUse,jdbcType=INTEGER}
		      </if>
	 		 <if test="managerId != null and managerId!=''">
		        and b.manager_id = #{managerId,jdbcType=VARCHAR}
		      </if>
		      <if test="mobile != null and mobile !=''">
		        and mobile = #{mobile,jdbcType=VARCHAR}
		      </if>
		      <if test="desc != null and desc != ''">
	       	 	and `desc` = #{desc,jdbcType=VARCHAR}
	      	  </if>
		      <if test="province != null">
		        and province_code = #{province,jdbcType=VARCHAR}
		      </if>
		      <if test="city != null">
		        and city_code = #{city,jdbcType=VARCHAR}
		      </if>
		      <if test="town != null">
		        and town_code = #{town,jdbcType=VARCHAR}
		      </if>  
		      <!-- TODO 过滤家庭医生 -->
		      <if test="shieldJY != null and shieldJY == 1" >
			      <if test="roleId != null and roleId == 1 ">
			      	AND ( doctor_sign_type != 1 OR doctor_sign_type IS NULL )  <!-- 过滤签约家庭医生 -->
			      </if>
			      <if test="roleId != null and roleId == 2 ">
				  	and type != 4             <!-- 过滤机构类型：社区卫生服务中心 -->
				  </if>
			  </if>
		 </where>
	       GROUP BY b.`manager_id`
	       order by b.create_time
	   )da
	   where 1=1 
	    <if test="deptId!='' and deptId!=null">
		      	  	<if test="roleId != null and roleId!='' and roleId ==1">
				        and da.type= #{deptId,jdbcType=INTEGER}
			      	</if>
			      	<if test="roleId != null and roleId !='' and roleId ==2">
			        	and FIND_IN_SET(#{deptId,jdbcType=INTEGER},da.deptIds)  
			       </if>
		</if>
  </select>
  <select id="selectByConditionLimit" parameterType="java.util.Map" 
  resultType="com.semioe.api.vo.BackstageUserInfoVO">
       select * from (
	    SELECT 
		    b.manager_id AS managerId, b.name, image_url AS imageUrl, TYPE, 
		    address, company, skills, 
		    title, certifications_url as certificationsUrl, 
		    role_id as roleId, user_status as userStatus, email, mobile, create_time, 
		    update_time, in_use AS inUse,`desc` 
		    , doctor_sign_type as doctorSignType, doctor_out_time as doctorOutTime, province_code , city_code , town_code,
		    GROUP_CONCAT(dept.`dept_id`) AS deptIds,GROUP_CONCAT(dept.name) AS deptNames,
		    GROUP_CONCAT(tag.tag_id) AS tagIds,GROUP_CONCAT(tag.name) AS tagNames
	    FROM backstage_user_info b
	    LEFT JOIN (
			SELECT r.dept_id,r.manager_id,d.name FROM department_rel r LEFT JOIN department_dic d
			ON r.dept_id = d.id
	    )dept ON  b.`manager_id` = dept.`manager_id`
	    LEFT JOIN(
	    	SELECT tr.tag_id,tr.manager_id,t.name FROM tags_rel tr LEFT JOIN tags_dic t
		ON tr.tag_id = t.id
	    )tag ON b.`manager_id` = tag.manager_id
	      <where>
		      <if test="name != null and name!=''">
		        and b.name like #{name,jdbcType=VARCHAR}
		      </if>
		      <if test="roleId != null">
		        and role_id = #{roleId,jdbcType=INTEGER}
		      </if>
		      <if test="userStatus != null">
		        and user_status = #{userStatus,jdbcType=INTEGER}
		      </if>
		      <if test="inUse != null">
		        and in_use = #{inUse,jdbcType=INTEGER}
		      </if>
	 		 <if test="managerId != null and managerId!=''">
		        and b.manager_id = #{managerId,jdbcType=VARCHAR}
		      </if>
		      <if test="mobile != null and mobile !=''">
		        and mobile = #{mobile,jdbcType=VARCHAR}
		      </if>
		      <if test="desc != null and desc != ''">
	       	 	and `desc` = #{desc,jdbcType=VARCHAR}
	      	  </if>
		      <if test="province != null">
		        and province_code = #{province,jdbcType=VARCHAR}
		      </if>
		      <if test="city != null">
		        and city_code = #{city,jdbcType=VARCHAR}
		      </if>
		      <if test="town != null">
		        and town_code = #{town,jdbcType=VARCHAR}
		      </if>  
		      <!-- TODO 过滤家庭医生 -->
		      <if test="shieldJY != null and shieldJY == 1" >
			      <if test="roleId != null and roleId == 1 ">
			      	AND ( doctor_sign_type != 1 OR doctor_sign_type IS NULL )  <!-- 过滤签约家庭医生 -->
			      </if>
			      <if test="roleId != null and roleId == 2 ">
				  	and type != 4             <!-- 过滤机构类型：社区卫生服务中心 -->
				  </if>
			  </if>
		 </where>
	       GROUP BY b.`manager_id`
	       order by b.create_time
   	)da
  	where 1=1 
    <if test="deptId!='' and deptId!=null">
	      	  	<if test="roleId != null and roleId!='' and roleId ==1">
			        and da.type= #{deptId,jdbcType=INTEGER}
		      	</if>
		      	<if test="roleId != null and roleId !='' and roleId ==2">
		        	and FIND_IN_SET(#{deptId,jdbcType=INTEGER},da.deptIds)  
		       </if>
	</if>
    limit #{beginSize,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="selectRegisterNumberListPage" parameterType="com.semioe.api.vo.DateConditionsVO" resultType="com.semioe.api.dto.Statistics">
  	select
  	  DATE_FORMAT(create_time,'%Y-%m-%d') as date, count(1)  as countNumber
  	from
  	  backstage_user_info
  	<where>
  	  <if test="startDate != null and startDate != ''">
  	    	and create_time <![CDATA[>=]]> #{startDate}
  	  </if>
  	  <if test="endDate != null and endDate != ''">
  	  	and create_time <![CDATA[<=]]> #{endDate}  	  
  	  </if>
  	</where>
  	group by DATE_FORMAT(create_time,'%Y-%m-%d')
  </select>
  
   <select id="selectByConditionListPage"  parameterType="com.semioe.api.vo.BackstageUserInfoVO" resultMap="BaseVOResultMap">
	 	select 
	    	manager_id, name, image_url, type, address, company, skills, title, certifications_url, 
    		role_id, user_status, email, mobile, create_time, update_time, in_use,`desc` , doctor_sign_type , doctor_out_time ,
    		province_code , city_code , town_code
	    from backstage_user_info
	    where 1=1
	    <if test="name != null and name != ''">
        and name like #{name,jdbcType=VARCHAR}
      </if>
	    <if test="mobile != null and mobile != ''">
        and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
        and role_id in
                <foreach item="item" index="index" collection="listRole" 
                         open="(" separator="," close=")">
                        ${item}
                </foreach>
  </select>
   <select id="selectByConditionList"  parameterType="com.semioe.api.vo.BackstageUserInfoVO" resultMap="BaseVOResultMap">
	 	select 
	    <include refid="Base_Column_List" />
	    from backstage_user_info
	    where 1=1
	    <if test="name != null and name != ''">
        and name like #{name,jdbcType=VARCHAR}
      </if>
	    <if test="mobile != null and mobile != ''">
        and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
        and role_id in
                <foreach item="item" index="index" collection="listRole" 
                         open="(" separator="," close=")">
                        ${item}
                </foreach>
  </select>
  
  <resultMap id="userInfoDTOResultMap" type="com.semioe.api.dto.BackstageUserInfoDTO">
    <id column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="username" jdbcType="VARCHAR" property="name" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="tag_ids" jdbcType="VARCHAR" property="tagIds" />
    <result column="tag_names" jdbcType="VARCHAR" property="tagNames" />
  </resultMap>

  <select id="queryUserListPage" resultMap="userInfoDTOResultMap" parameterType="com.semioe.api.vo.BackstageUserInfoVO">
    SELECT
      bui.manager_id,
      bui.`name` AS username,
      bui.mobile,
      bui.in_use AS in_use,
      bui.user_status AS user_status,
      bri.item_name AS role,
      GROUP_CONCAT(td.id ) AS tag_ids ,
      GROUP_CONCAT(td. NAME) AS tag_names
    FROM
      backstage_user_info bui
    LEFT JOIN backstage_role_info bri ON bui.role_id = bri.id
    LEFT JOIN tags_rel tr ON bui.manager_id = tr.manager_id
    LEFT JOIN tags_dic td ON tr.tag_id = td.id
    WHERE
      1 = 1
    <if test="name != null and name != '' ">
      and bui.name like CONCAT(#{name,jdbcType=VARCHAR},'%') 
    </if>
    <if test="provinceCode != null and provinceCode != '' ">
      and bui.province_code=#{provinceCode, jdbcType=VARCHAR}
    </if>
    <if test="cityCode != null and cityCode != '' ">
      and bui.city_code=#{cityCode, jdbcType=VARCHAR}
    </if>
    <if test="townCode != null and townCode != '' ">
      and bui.town_code=#{townCode, jdbcType=VARCHAR}
    </if>
    <if test="inUse != null ">
      and bui.in_use=#{inUse, jdbcType=INTEGER}
    </if>
    <if test="mobile != null and mobile != '' ">
      and bui.mobile=#{mobile, jdbcType=VARCHAR}
    </if>
    <if test="roleId != null and roleId != '' ">
      and bui.role_id=#{roleId, jdbcType=VARCHAR}
    </if>
    <if test="userStatus != null ">
      and bui.user_status=#{userStatus, jdbcType=INTEGER}
    </if>
    GROUP BY bui.manager_id
  </select>



</mapper>