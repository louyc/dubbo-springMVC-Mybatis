<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.JyOrgDocRelMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.JyOrgDocRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="org_id" jdbcType="VARCHAR" property="orgId" />
    <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="sign_type" jdbcType="INTEGER" property="signType" />
    <result column="sign_time" jdbcType="TIMESTAMP" property="signTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, org_id, doctor_id, sign_type, sign_time, out_time, create_time, update_time, 
    in_use
  </sql>
  <select id="selectByExample" parameterType="com.semioe.api.entity.JyOrgDocRelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jy_org_doc_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from jy_org_doc_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from jy_org_doc_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.JyOrgDocRelExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from jy_org_doc_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.JyOrgDocRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into jy_org_doc_rel (id, org_id, doctor_id, 
      sign_type, sign_time, out_time, 
      create_time, update_time, in_use
      )
    values (#{id,jdbcType=INTEGER}, #{orgId,jdbcType=VARCHAR}, #{doctorId,jdbcType=VARCHAR}, 
      #{signType,jdbcType=INTEGER}, #{signTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{inUse,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.JyOrgDocRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into jy_org_doc_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="signType != null">
        sign_type,
      </if>
      <if test="signTime != null">
        sign_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="signType != null">
        #{signType,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.JyOrgDocRelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from jy_org_doc_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jy_org_doc_rel
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=VARCHAR},
      </if>
      <if test="record.signType != null">
        sign_type = #{record.signType,jdbcType=INTEGER},
      </if>
      <if test="record.signTime != null">
        sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jy_org_doc_rel
    set id = #{record.id,jdbcType=INTEGER},
      org_id = #{record.orgId,jdbcType=VARCHAR},
      doctor_id = #{record.doctorId,jdbcType=VARCHAR},
      sign_type = #{record.signType,jdbcType=INTEGER},
      sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.JyOrgDocRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jy_org_doc_rel
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="signType != null">
        sign_type = #{signType,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.JyOrgDocRel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update jy_org_doc_rel
    set org_id = #{orgId,jdbcType=VARCHAR},
      doctor_id = #{doctorId,jdbcType=VARCHAR},
      sign_type = #{signType,jdbcType=INTEGER},
      sign_time = #{signTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 更新用户表冗余字段 -->
  <update id="updateUserInfoType" parameterType="com.semioe.api.entity.JyOrgDocRel">
    UPDATE 
    	backstage_user_info
    SET 
      doctor_sign_type = #{signType,jdbcType=INTEGER},
      doctor_out_time = #{outTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    WHERE 
    	manager_id = #{doctorId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectJyOrgDocRel" parameterType="com.semioe.api.entity.JyOrgDocRel" resultMap="BaseResultMap">
  	SELECT
  		<include refid="Base_Column_List" />
  	FROM
  		jy_org_doc_rel
  	WHERE in_use = 1
  	
  	<if test="orgId != null and orgId != '' " >
  		AND org_id = #{orgId,jdbcType=VARCHAR}
  	</if>
  	<if test="doctorId != null and doctorId != '' " >
    	AND doctor_id = #{doctorId,jdbcType=VARCHAR}
  	</if>
  	<if test="signType != null " >
  		AND sign_type = #{signType,jdbcType=INTEGER}
  	</if>
  	<if test="validTime != null" >
  		AND sign_time &lt;= #{validTime,jdbcType=TIMESTAMP}
  		AND out_time &gt;= #{validTime,jdbcType=TIMESTAMP}
  	</if>
  </select>
  
  <!-- doctorInfo start -->
  <resultMap id="DoctorResultMap" type="com.semioe.api.vo.JyDoctorInfoVO">
    <id column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
	<result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
	<result column="address" jdbcType="VARCHAR" property="address" />
	<result column="company" jdbcType="VARCHAR" property="company" />
	<result column="skills" jdbcType="VARCHAR" property="skills" />
	<result column="title" jdbcType="VARCHAR" property="title" />
	<result column="certifications_url" jdbcType="VARCHAR" property="certificationsUrl" />
	<result column="email" jdbcType="VARCHAR" property="email" />
	<result column="mobile" jdbcType="VARCHAR" property="mobile" />
	<result column="desc" jdbcType="VARCHAR" property="desc" />
	<result column="doctor_sign_type" jdbcType="INTEGER" property="doctorSignType" />
	<result column="doctor_out_time" jdbcType="TIMESTAMP" property="doctorOutTime" />
	<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	<result column="in_use" jdbcType="INTEGER" property="inUse" />
	
	<result column="sign_id" jdbcType="INTEGER" property="signId" />
    <result column="sign_type" jdbcType="INTEGER" property="signType" />
    <result column="sign_time" jdbcType="TIMESTAMP" property="signTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="sign_org_id" jdbcType="VARCHAR" property="signOrgId" />
    <result column="invite_time" jdbcType="TIMESTAMP" property="inviteTime" />
    <result column="jy_type" jdbcType="VARCHAR" property="jySignTypes" />
    
  </resultMap>
  
  <select id="findJyDoctorInfo" parameterType="com.semioe.api.entity.JyDoctorInfo" resultMap="DoctorResultMap" >
  	SELECT DISTINCT
		us.manager_id , us.`name` , us.address , us.company , us.skills , us.title , us.image_url , us.certifications_url ,
		us.email , us.mobile , us.`desc`  , us.create_time , us.update_time , us.in_use, 
		(CASE 
				WHEN us.doctor_sign_type != 1 THEN us.doctor_sign_type
				WHEN us.doctor_sign_type = 1 AND us.doctor_out_time &lt; NOW() THEN 3
				ELSE us.doctor_sign_type
		END) AS doctor_sign_type
		, us.doctor_out_time
	FROM
		backstage_user_info AS us
	WHERE us.in_use = 1 AND us.role_id = 1
	<if test="name != null and name != '' " >
		AND us.`name` = #{name,jdbcType=VARCHAR}
	</if>
  	<if test="mobile != null and mobile != '' " >
		AND us.mobile = #{mobile,jdbcType=VARCHAR}
	</if>
	<if test="managerId != null and managerId != '' " >
		AND us.manager_id = #{managerId,jdbcType=VARCHAR}
	</if>
  	<!-- us.`name` like CONCAT(#{relationName,jdbcType=VARCHAR},'%') -->
  </select>
  
  <sql id="Doctor_Column_List">
  	us.manager_id , us.`name` , us.address , us.company , us.skills , us.title , us.image_url , us.certifications_url ,
  	us.email , us.mobile , us.`desc` , us.doctor_sign_type , us.doctor_out_time , us.create_time , us.update_time , us.in_use 
  </sql>
  
  <sql id="DoctorSign_Column_List">
  	rel.id AS sign_id , rel.sign_type , rel.sign_time , rel.out_time , rel.create_time AS invite_time , rel.org_id AS sign_org_id
  </sql>
  
  <select id="countJySignDoctor" parameterType="com.semioe.api.entity.JyDoctorInfo" resultType="java.lang.Long">
  	SELECT 
  	<if test="validTime == null" >
  		COUNT( rel.id )
  	</if>
  	<if test="validTime != null" >
  		COUNT( DISTINCT us.manager_id )
  	</if>
  	FROM
  		backstage_user_info AS us
  	RIGHT JOIN jy_org_doc_rel AS rel ON us.manager_id = rel.doctor_id
  	WHERE us.in_use = 1
  	<if test="validTime != null" >
  		AND rel.sign_time &lt;= #{validTime,jdbcType=TIMESTAMP}
  		AND rel.out_time &gt;= #{validTime,jdbcType=TIMESTAMP}
  	</if>
  	<include refid="Doctor_Where_Clause" />	
  </select>
  
  <select id="selectJySignDoctor" parameterType="com.semioe.api.entity.JyDoctorInfo" resultMap="DoctorResultMap">
  	SELECT 
	<if test="validTime == null" >
  		<include refid="Doctor_Column_List" /> , 
  		<include refid="DoctorSign_Column_List" /> ,
  		GROUP_CONCAT(sig.jy_type) AS jy_type
  	</if>
  	<if test="validTime != null" >
  		DISTINCT <include refid="Doctor_Column_List" />
  	</if>
  	FROM
  		backstage_user_info AS us
  	RIGHT JOIN jy_org_doc_rel AS rel ON us.manager_id = rel.doctor_id
  	LEFT JOIN jy_sign_type_rel AS sig ON rel.id = sig.jy_rel_id  <!-- 查询家医签约类型 -->
  	WHERE us.in_use = 1
  	<if test="validTime != null" >
  		AND rel.sign_time &lt;= #{validTime,jdbcType=TIMESTAMP}
  		AND rel.out_time &gt;= #{validTime,jdbcType=TIMESTAMP}
  	</if>
  	<include refid="Doctor_Where_Clause" />	
  	<!-- 家医签约类型 -->
  	<if test= "jySignType != null and jySignType != ''">
  		AND sig.jy_type = #{jySignType,jdbcType=INTEGER}
  	</if>
  	GROUP BY rel.id
  	ORDER BY rel.create_time DESC
  	<if test="currentResult != null and currentResult &gt;= 0 and showCount != null and showCount &gt; 0 ">
   		limit #{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
    </if>
  </select>
  
  <sql id="Doctor_Where_Clause">
  	<if test="name != null and name != '' " > 
  		AND us.`name` = #{name,jdbcType=VARCHAR}
  	</if>
  	<if test="signOrgId != null and signOrgId != '' ">
  		AND rel.org_id = #{signOrgId,jdbcType=VARCHAR}
  	</if>
  	<if test="signType != null">
  		AND rel.sign_type = #{signType,jdbcType=INTEGER}
  	</if>
  	AND us.role_id = 1
  </sql>
  
  <!-- orgInfo start -->
  <resultMap id="OrgResultMap" type="com.semioe.api.vo.JyOrgInfoVO">
    <id column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="skills" jdbcType="VARCHAR" property="skills" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="certifications_url" jdbcType="VARCHAR" property="certificationsUrl" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="provinceCode_desc" jdbcType="VARCHAR" property="provinceCodeDesc" />
    <result column="cityCode_desc" jdbcType="VARCHAR" property="cityCodeDesc" />
    <result column="townCode_desc" jdbcType="VARCHAR" property="townCodeDesc" />
    
    <result column="sign_id" jdbcType="INTEGER" property="signId" />
    <result column="sign_type" jdbcType="INTEGER" property="signType" />
    <result column="sign_time" jdbcType="TIMESTAMP" property="signTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="sign_doctor_id" jdbcType="VARCHAR" property="signDoctorId" />
    <result column="invite_time" jdbcType="TIMESTAMP" property="inviteTime" />
    
  </resultMap>
  
  <sql id="OrgUs_Column_List">
  	us.manager_id , us.`name` , us.address , us.company , us.skills , us.title , us.image_url , us.certifications_url ,
  	us.email , us.mobile , us.create_time , us.update_time , us.in_use , us.`desc` , us.type 
  </sql>
  
  <sql id="OrgRel_Column_List">
  	rel.id AS sign_id , rel.sign_type , rel.sign_time , rel.out_time , rel.create_time AS invite_time , rel.doctor_id AS sign_doctor_id
  </sql>
  
  <select id="countJyOrgInfo" parameterType="com.semioe.api.entity.JyOrgInfo" resultType="java.lang.Long">
    SELECT COUNT( rel.id )
  	FROM 
  		backstage_user_info us
  	RIGHT JOIN jy_org_doc_rel AS rel ON us.manager_id = rel.org_id
  	WHERE us.in_use = 1
  		<include refid="OrgUs_Where_Clause" />
  		<include refid="OrgRel_Where_Clause" />
  </select>
  
  <select id="selectJyOrgInfo" parameterType="com.semioe.api.entity.JyOrgInfo" resultMap="OrgResultMap">
  	SELECT
  		<include refid="OrgUs_Column_List" /> ,
  		<include refid="OrgRel_Column_List" />
  	FROM 
  		backstage_user_info us
  	RIGHT JOIN jy_org_doc_rel AS rel ON us.manager_id = rel.org_id
  	WHERE us.in_use = 1
  		<include refid="OrgUs_Where_Clause" />
  		<include refid="OrgRel_Where_Clause" />
  	ORDER BY rel.create_time DESC
  	<if test="currentResult != null and currentResult &gt;= 0 and showCount != null and showCount &gt; 0 ">
   		limit #{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
    </if>
  </select>
  
  <sql id="OrgRel_Where_Clause">
  	<if test="doctorId != null and doctorId != '' ">
  		AND rel.doctor_id = #{doctorId,jdbcType=VARCHAR}
  	</if>
  	<if test="signType != null ">
  		AND rel.sign_type = #{signType,jdbcType=INTEGER}
  	</if>
  </sql>
  
  <sql id="OrgUs_Where_Clause">
  	<if test="name != null and name != '' " > 
  		AND us.`name` = #{name,jdbcType=VARCHAR}
  	</if>
  	<if test= "type != null and type != '' ">
  		AND us.type = #{type,jdbcType=VARCHAR}
  	</if>
  	
  	AND us.role_id = 2 AND us.user_status = 1
  </sql>
  
  <!-- 查询家庭医生机构列表 -->
  <select id="countOrgInfoList" parameterType="com.semioe.api.entity.JyOrgInfo" resultType="java.lang.Long">
    SELECT COUNT( us.manager_id )
  	FROM 
  		backstage_user_info us
  	WHERE us.in_use = 1
  		<include refid="OrgUs_Where_Clause" />
  </select>
  
  <select id="selectOrgInfoList" parameterType="com.semioe.api.entity.JyOrgInfo" resultMap="OrgResultMap">
  	SELECT
  		us.manager_id , us.`name` , us.address , us.company , us.skills , us.title , us.image_url , us.certifications_url ,
  	us.email , us.mobile , us.create_time , us.update_time , us.in_use , us.`desc` , us.type ,
  	c.`name` AS cityCodeDesc,p.`name` AS provinceCodeDesc,t.`name` AS townCodeDesc
  	FROM 
  		backstage_user_info us
  	LEFT JOIN t_address_city c ON us.`city_code` = c.`code`
  	LEFT JOIN t_address_province p ON us.`province_code` = p.`code`
  	LEFT JOIN t_address_town t ON us.`town_code` = t.`code`
  	WHERE us.in_use = 1
  		<include refid="OrgUs_Where_Clause" />
  	<if test="currentResult != null and currentResult &gt;= 0 and showCount != null and showCount &gt; 0 ">
   		limit #{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
    </if>
  </select>
  
  <!-- orgInfo end -->
  
</mapper>