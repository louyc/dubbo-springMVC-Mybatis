<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.PersonalTailorMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.PersonalTailor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="implement_id" jdbcType="INTEGER" property="implementId" />
    <result column="apply_type" jdbcType="INTEGER" property="applyType" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="rich_text" jdbcType="VARCHAR" property="richText" />
    <result column="display_order" jdbcType="INTEGER" property="displayOrder" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, apply_type, img_url, title, description, display_order, create_time, update_time, 
    in_use,rich_text
  </sql>
  <select id="selectByExample" parameterType="com.semioe.api.entity.PersonalTailorExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from personal_tailor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from personal_tailor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from personal_tailor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.PersonalTailorExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from personal_tailor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.PersonalTailor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into personal_tailor (apply_type, img_url, title, 
      description, display_order, create_time, 
      update_time, in_use,rich_text)
    values (#{applyType,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{displayOrder,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{inUse,jdbcType=INTEGER},#{richText,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.PersonalTailor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into personal_tailor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="applyType != null">
        apply_type,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="richText != null">
        rich_text,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="displayOrder != null">
        display_order,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="applyType != null">
        #{applyType,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="richText != null">
        #{rich_text,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.PersonalTailorExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from personal_tailor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update personal_tailor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applyType != null">
        apply_type = #{record.applyType,jdbcType=INTEGER},
      </if>
      <if test="record.richText != null">
        rich_text = #{record.richText,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.displayOrder != null">
        display_order = #{record.displayOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update personal_tailor
    set id = #{record.id,jdbcType=INTEGER},
      apply_type = #{record.applyType,jdbcType=INTEGER},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      rich_text = #{record.richText,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      display_order = #{record.displayOrder,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.PersonalTailor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update personal_tailor
    <set>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=INTEGER},
      </if>
      <if test="richText != null and richText!=''">
        rich_text = #{richText,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null and imgUrl!=''">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="title != null and title!=''">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null and description!=''">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        display_order = #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null and createTime!=''">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime!=''">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.PersonalTailor">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update personal_tailor
    set apply_type = #{applyType,jdbcType=INTEGER},
      rich_text = #{richText,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      display_order = #{displayOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByEntity" parameterType="com.semioe.api.vo.ImplementSetDetailVO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from personal_tailor
    where  in_use=1
      <if test="applyType != null and applyType>0">
        and apply_type = #{applyType,jdbcType=INTEGER}
      </if>
      <if test="title != null and title!=''">
        and title like #{title,jdbcType=VARCHAR}
      </if>
      <if test ="id != null">
      	and id = #{id,jdbcType=INTEGER}
      </if>
      <if test ="implementId != null  and implementId>0">
      	and implement_id = #{implementId,jdbcType=INTEGER}
      </if>
  </select>
  
   <select id="selectEntityByConditionListPage" parameterType="com.semioe.api.vo.PersonalTailorVO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from personal_tailor
    where  in_use=1
       <if test="applyType != null and applyType>0">
        and apply_type = #{applyType,jdbcType=INTEGER}
      </if>
      <if test ="implementId != null and implementId!=''  and implementId>0">
      	and implement_id = #{implementId,jdbcType=INTEGER}
      </if>
      <if test="title != null and title!=''">
        and title like #{title,jdbcType=VARCHAR}
      </if>
      <if test ="id != null">
      	and id = #{id,jdbcType=INTEGER}
      </if>
      order by display_order asc,create_time desc
  </select>
   <select id="selectEntityByCondition" parameterType="com.semioe.api.vo.PersonalTailorVO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from personal_tailor
    where  in_use=1
   	  <if test ="implementId != null and implementId !=''">
      	and implement_id = #{implementId,jdbcType=INTEGER}
      </if>
      <if test="applyType != null and applyType!='' and applyType>0">
        and apply_type = #{applyType,jdbcType=INTEGER}
      </if>
      <if test="title != null and title!= ''">
        and title like #{title,jdbcType=VARCHAR}
      </if>
      <if test ="id != null">
      	and id = #{id,jdbcType=INTEGER}
      </if>
  </select>
  <update id="updateInUse" parameterType="map">
   update personal_tailor
    set
        in_use = #{inUse,jdbcType=INTEGER},
		update_time =#{updateTime,jdbcType=TIMESTAMP}

   </update>
</mapper>