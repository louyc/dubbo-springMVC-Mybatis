<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.OrderInfoMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="relation_name" jdbcType="VARCHAR" property="relationName" />
    <result column="relation_supplier" jdbcType="VARCHAR" property="relationSupplier" />
    <result column="relation_supplier_id" jdbcType="VARCHAR" property="relationSupplierId" />
    <result column="relation_img_url" jdbcType="VARCHAR" property="relationImgUrl" />
    <result column="relation_code" jdbcType="VARCHAR" property="relationCode" />
    <result column="relation_code_name" jdbcType="VARCHAR" property="relationCodeName" />
    <result column="relation_price" jdbcType="DOUBLE" property="relationPrice" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="order_count" jdbcType="INTEGER" property="orderCount" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="source_type" jdbcType="VARCHAR" property="sourceType" />
    <result column="source_from_type" jdbcType="VARCHAR" property="sourceFromType" />
    <result column="source_user_id" jdbcType="VARCHAR" property="sourceUserId" />
    <result column="back_manager_id" jdbcType="VARCHAR" property="backManagerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="relation_desc" jdbcType="LONGVARCHAR" property="relationDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, order_code, relation_id, relation_name, relation_supplier, relation_supplier_id, 
    relation_img_url, relation_code, relation_code_name, relation_price, type, price, 
    order_count, pay_status, user_id, create_time, update_time, in_use, out_time, source_type, 
    source_from_type , source_user_id,back_manager_id
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    relation_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.semioe.api.entity.OrderInfoExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.semioe.api.entity.OrderInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.OrderInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_info (order_code, relation_id, relation_name, 
      relation_supplier, relation_supplier_id, relation_img_url, 
      relation_code, relation_code_name, relation_price, 
      type, price, order_count, 
      pay_status, user_id, create_time, 
      update_time, in_use, out_time, 
      source_type, source_from_type , source_user_id, relation_desc , back_manager_id
      )
    values (#{orderCode,jdbcType=VARCHAR}, #{relationId,jdbcType=INTEGER}, #{relationName,jdbcType=VARCHAR}, 
      #{relationSupplier,jdbcType=VARCHAR}, #{relationSupplierId,jdbcType=VARCHAR}, #{relationImgUrl,jdbcType=VARCHAR}, 
      #{relationCode,jdbcType=VARCHAR}, #{relationCodeName,jdbcType=VARCHAR}, #{relationPrice,jdbcType=DOUBLE}, 
      #{type,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{orderCount,jdbcType=INTEGER}, 
      #{payStatus,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{inUse,jdbcType=INTEGER}, #{outTime,jdbcType=TIMESTAMP}, 
      #{sourceType,jdbcType=VARCHAR}, #{sourceFromType,jdbcType=VARCHAR}, #{sourceUserId,jdbcType=VARCHAR}, 
      #{relationDesc,jdbcType=LONGVARCHAR},#{backManagerId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        order_code,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="relationName != null">
        relation_name,
      </if>
      <if test="relationSupplier != null">
        relation_supplier,
      </if>
      <if test="relationSupplierId != null">
        relation_supplier_id,
      </if>
      <if test="relationImgUrl != null">
        relation_img_url,
      </if>
      <if test="relationCode != null">
        relation_code,
      </if>
      <if test="relationCodeName != null">
        relation_code_name,
      </if>
      <if test="relationPrice != null">
        relation_price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="orderCount != null">
        order_count,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="sourceFromType != null">
        source_from_type,
      </if>
      <if test="sourceUserId != null">
        source_user_id,
      </if>
      <if test="relationDesc != null">
        relation_desc,
      </if>
      <if test="backManagerId != null">
        back_manager_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=INTEGER},
      </if>
      <if test="relationName != null">
        #{relationName,jdbcType=VARCHAR},
      </if>
      <if test="relationSupplier != null">
        #{relationSupplier,jdbcType=VARCHAR},
      </if>
      <if test="relationSupplierId != null">
        #{relationSupplierId,jdbcType=VARCHAR},
      </if>
      <if test="relationImgUrl != null">
        #{relationImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null">
        #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="relationCodeName != null">
        #{relationCodeName,jdbcType=VARCHAR},
      </if>
      <if test="relationPrice != null">
        #{relationPrice,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="orderCount != null">
        #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=VARCHAR},
      </if>
      <if test="sourceFromType != null">
        #{sourceFromType,jdbcType=VARCHAR},
      </if>
      <if test="sourceUserId != null">
        #{sourceUserId,jdbcType=VARCHAR},
      </if>
      <if test="relationDesc != null">
        #{relationDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="backManagerId != null">
        #{backManagerId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.OrderInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null">
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=INTEGER},
      </if>
      <if test="record.relationName != null">
        relation_name = #{record.relationName,jdbcType=VARCHAR},
      </if>
      <if test="record.relationSupplier != null">
        relation_supplier = #{record.relationSupplier,jdbcType=VARCHAR},
      </if>
      <if test="record.relationSupplierId != null">
        relation_supplier_id = #{record.relationSupplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.relationImgUrl != null">
        relation_img_url = #{record.relationImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.relationCode != null">
        relation_code = #{record.relationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.relationCodeName != null">
        relation_code_name = #{record.relationCodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.relationPrice != null">
        relation_price = #{record.relationPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.orderCount != null">
        order_count = #{record.orderCount,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceFromType != null">
        source_from_type = #{record.sourceFromType,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceUserId != null">
        source_user_id = #{record.sourceUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.relationDesc != null">
        relation_desc = #{record.relationDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_info
    set id = #{record.id,jdbcType=INTEGER},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      relation_id = #{record.relationId,jdbcType=INTEGER},
      relation_name = #{record.relationName,jdbcType=VARCHAR},
      relation_supplier = #{record.relationSupplier,jdbcType=VARCHAR},
      relation_supplier_id = #{record.relationSupplierId,jdbcType=VARCHAR},
      relation_img_url = #{record.relationImgUrl,jdbcType=VARCHAR},
      relation_code = #{record.relationCode,jdbcType=VARCHAR},
      relation_code_name = #{record.relationCodeName,jdbcType=VARCHAR},
      relation_price = #{record.relationPrice,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      order_count = #{record.orderCount,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      source_type = #{record.sourceType,jdbcType=VARCHAR},
      source_from_type = #{record.sourceFromType,jdbcType=VARCHAR},
      source_user_id = #{record.sourceUserId,jdbcType=VARCHAR},
      relation_desc = #{record.relationDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_info
    set id = #{record.id,jdbcType=INTEGER},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      relation_id = #{record.relationId,jdbcType=INTEGER},
      relation_name = #{record.relationName,jdbcType=VARCHAR},
      relation_supplier = #{record.relationSupplier,jdbcType=VARCHAR},
      relation_supplier_id = #{record.relationSupplierId,jdbcType=VARCHAR},
      relation_img_url = #{record.relationImgUrl,jdbcType=VARCHAR},
      relation_code = #{record.relationCode,jdbcType=VARCHAR},
      relation_code_name = #{record.relationCodeName,jdbcType=VARCHAR},
      relation_price = #{record.relationPrice,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      order_count = #{record.orderCount,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      source_type = #{record.sourceType,jdbcType=VARCHAR},
      source_user_id = #{record.sourceUserId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_info
    <set>
      <if test="orderCode != null">
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=INTEGER},
      </if>
      <if test="relationName != null">
        relation_name = #{relationName,jdbcType=VARCHAR},
      </if>
      <if test="relationSupplier != null">
        relation_supplier = #{relationSupplier,jdbcType=VARCHAR},
      </if>
      <if test="relationSupplierId != null">
        relation_supplier_id = #{relationSupplierId,jdbcType=VARCHAR},
      </if>
      <if test="relationImgUrl != null">
        relation_img_url = #{relationImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null">
        relation_code = #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="relationCodeName != null">
        relation_code_name = #{relationCodeName,jdbcType=VARCHAR},
      </if>
      <if test="relationPrice != null">
        relation_price = #{relationPrice,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="orderCount != null">
        order_count = #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=VARCHAR},
      </if>
      <if test="sourceUserId != null">
        source_user_id = #{sourceUserId,jdbcType=VARCHAR},
      </if>
      <if test="relationDesc != null">
        relation_desc = #{relationDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_info
    set order_code = #{orderCode,jdbcType=VARCHAR},
      relation_id = #{relationId,jdbcType=INTEGER},
      relation_name = #{relationName,jdbcType=VARCHAR},
      relation_supplier = #{relationSupplier,jdbcType=VARCHAR},
      relation_supplier_id = #{relationSupplierId,jdbcType=VARCHAR},
      relation_img_url = #{relationImgUrl,jdbcType=VARCHAR},
      relation_code = #{relationCode,jdbcType=VARCHAR},
      relation_code_name = #{relationCodeName,jdbcType=VARCHAR},
      relation_price = #{relationPrice,jdbcType=DOUBLE},
      type = #{type,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      order_count = #{orderCount,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      source_type = #{sourceType,jdbcType=VARCHAR},
      source_user_id = #{sourceUserId,jdbcType=VARCHAR},
      relation_desc = #{relationDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.OrderInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_info
    set order_code = #{orderCode,jdbcType=VARCHAR},
      relation_id = #{relationId,jdbcType=INTEGER},
      relation_name = #{relationName,jdbcType=VARCHAR},
      relation_supplier = #{relationSupplier,jdbcType=VARCHAR},
      relation_supplier_id = #{relationSupplierId,jdbcType=VARCHAR},
      relation_img_url = #{relationImgUrl,jdbcType=VARCHAR},
      relation_code = #{relationCode,jdbcType=VARCHAR},
      relation_code_name = #{relationCodeName,jdbcType=VARCHAR},
      relation_price = #{relationPrice,jdbcType=DOUBLE},
      type = #{type,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      order_count = #{orderCount,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      source_type = #{sourceType,jdbcType=VARCHAR},
      source_user_id = #{sourceUserId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByOrderCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    	<include refid="Base_Column_List" />
    from order_info
    where order_code = #{orderCode,jdbcType=VARCHAR}
  </select>
  
  <!-- VO相关 -->
  
  <resultMap id="VoResultMap" type="com.semioe.api.vo.OrderInfoVO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="relation_id" jdbcType="INTEGER" property="relationId" />
    <result column="relation_name" jdbcType="VARCHAR" property="relationName" />
    <result column="relation_desc" jdbcType="VARCHAR" property="relationDesc" />
    <result column="relation_supplier" jdbcType="VARCHAR" property="relationSupplier" />
    <result column="relation_supplier_id" jdbcType="VARCHAR" property="relationSupplierId" />
    <result column="relation_img_url" jdbcType="VARCHAR" property="relationImgUrl" />
    <result column="relation_code" jdbcType="VARCHAR" property="relationCode" />
    <result column="relation_code_name" jdbcType="VARCHAR" property="relationCodeName" />
    <result column="relation_price" jdbcType="DOUBLE" property="relationPrice" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="order_count" jdbcType="INTEGER" property="orderCount" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="source_type" jdbcType="VARCHAR" property="sourceType" />
    <result column="source_from_type" jdbcType="VARCHAR" property="sourceFromType" />
    <result column="source_user_id" jdbcType="VARCHAR" property="sourceUserId" />
    <result column="source_user" jdbcType="VARCHAR" property="sourceUser" />
    
    <result column="back_manager_id" jdbcType="VARCHAR" property="backManagerId" />
    
    <result column="report_count" jdbcType="INTEGER" property="reportCount" />
    <result column="doctor_company" jdbcType="VARCHAR" property="doctorCompany" />
    <result column="doctor_tital" jdbcType="VARCHAR" property="doctorTital" />
  </resultMap>
  
  <sql id="Vo_Column_List">
    ord.id, ord.order_code, ord.relation_id, ord.relation_name,ord.relation_desc, ord.relation_supplier, 
    ord.relation_supplier_id, ord.relation_img_url, ord.relation_code, ord.relation_code_name,
    ord.relation_price, ord.type, ord.price, ord.order_count, ord.pay_status,
    ord.user_id, ord.create_time, ord.update_time, ord.in_use , ord.source_type , ord.source_from_type ,
    ord.source_user_id , ord.back_manager_id
  </sql>
  
  <sql id="Entity_Where_Clause">
  	<!-- 商品 服务 提供人id -->
  	<if test="relationSupplierId != null  and relationSupplierId != '' ">
    	AND ord.relation_supplier_id = #{relationSupplierId,jdbcType=VARCHAR}
    </if>
    
  	<if test="relationName != null  and relationName != '' ">
    	AND ord.relation_name like CONCAT(#{relationName,jdbcType=VARCHAR},'%')
    </if>
    <if test="orderCode != null  and orderCode != '' ">
    	AND ord.order_code = #{orderCode,jdbcType=VARCHAR}
    </if>
    <if test="relationSupplier != null and relationSupplier != ''">
    	AND ord.relation_supplier like CONCAT(#{relationSupplier,jdbcType=VARCHAR},'%')
    </if>
    <if test="startDate != null and startDate != ''">
    	AND ord.create_time &gt;= DATE_FORMAT( #{startDate,jdbcType=VARCHAR}, '%Y-%m-%d %H:%i:%s')
    </if>
    <if test="endDate != null and endDate != ''">
    	AND ord.create_time &lt;= DATE_FORMAT( #{endDate,jdbcType=VARCHAR}, '%Y-%m-%d %H:%i:%s')
    </if>
    <if test="type != null  and type != '' ">
    	AND ord.type = #{type,jdbcType=VARCHAR}
    </if>
    <if test="payStatus != null">
    	AND ord.pay_status = #{payStatus,jdbcType=INTEGER}
    </if>
    <if test="userId != null">
    	AND ord.user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="sourceType != null and sourceType != '' ">
    	AND ord.source_type = #{sourceType,jdbcType=VARCHAR}
    </if>
    
    <if test="backManagerId != null and backManagerId != '' ">
    	AND ord.back_manager_id = #{backManagerId,jdbcType=VARCHAR}
    </if>
    
    AND ord.in_use = 1
  </sql>
  
  <select id="countByEntity" parameterType="com.semioe.api.entity.OrderInfo" resultType="java.lang.Long">
    select count(ord.id) from order_info as ord
    where 1=1 <include refid="Entity_Where_Clause" />
  </select>
  
  <select id="selectVoByEntity" parameterType="com.semioe.api.entity.OrderInfo" resultMap="VoResultMap">
    SELECT 
    	<include refid="Vo_Column_List" /> , 
    	(CASE WHEN us.name is null THEN us.mobile ELSE us.`name` END) AS userName  ,
		(CASE WHEN ord.source_from_type = '3' THEN abus.`name` ELSE bus.`name` END)  AS source_user ,
		us.address AS user_address
    FROM order_info AS ord
    LEFT JOIN api_user_info AS us ON ord.user_id = us.manager_id
    LEFT JOIN api_user_info AS abus ON ord.source_user_id = abus.manager_id  
	LEFT JOIN backstage_user_info AS bus ON ord.source_user_id = bus.manager_id 
    WHERE 1=1 <include refid="Entity_Where_Clause" />
    <if test="sourceUser != null and sourceUser != '' " >
    	AND bus.`name` like CONCAT(#{sourceUser,jdbcType=VARCHAR},'%')
    </if>
    ORDER BY ord.create_time DESC
    <if test="currentResult != null and currentResult &gt;= 0 and showCount != null and showCount &gt; 0 ">
    	LIMIT #{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="selectVoReportCount" parameterType="com.semioe.api.entity.OrderInfo" resultMap="VoResultMap">
    SELECT 
    	<include refid="Vo_Column_List" /> , count(rep.id) AS report_count
    	, baus.company AS doctor_company , baus.title AS doctor_tital 
    FROM order_info AS ord
    LEFT JOIN report_info AS rep ON ord.id = rep.order_id 
    LEFT JOIN backstage_user_info AS baus ON ord.relation_supplier_id = baus.manager_id
    WHERE 1=1 <include refid="Entity_Where_Clause" />
    GROUP BY ord.id
    ORDER BY ord.create_time DESC
    <if test="currentResult != null and currentResult &gt;= 0 and showCount != null and showCount &gt; 0 ">
    	LIMIT #{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="selectVoByPrimaryKey" parameterType="java.lang.Integer" resultMap="VoResultMap">
   	SELECT 
   		<include refid="Vo_Column_List" /> , 
    	(CASE WHEN us.name is null THEN us.mobile ELSE us.`name` END) AS userName  ,
		(CASE WHEN ord.source_from_type = '3' THEN abus.`name` ELSE bus.`name` END)  AS source_user ,
		us.address AS user_address
    FROM order_info AS ord
    LEFT JOIN api_user_info AS us ON ord.user_id = us.manager_id
    LEFT JOIN api_user_info AS abus ON ord.source_user_id = abus.manager_id  
	LEFT JOIN backstage_user_info AS bus ON ord.source_user_id = bus.manager_id 
    WHERE ord.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectVoByOrderCode" parameterType="java.lang.String" resultMap="VoResultMap">
    SELECT 
    	<include refid="Vo_Column_List" /> , us.name AS userName
    FROM order_info AS ord
    LEFT JOIN api_user_info AS us ON ord.user_id = us.manager_id
    WHERE ord.order_code = #{orderCode,jdbcType=VARCHAR}
  </select>
  
  <!-- 销售总金额统计 -->
  <select id="countTotalPriceByDate" parameterType="com.semioe.api.entity.OrderInfo" resultType="java.lang.Double">
  	SELECT
    	SUM( case when ord.price is null then 0 else ord.price end  ) AS countPrice
    FROM
      	order_info as ord
    WHERE 1=1
    	<include refid="CountOrder_Where_Clause" /> 	
  </select>
  
  <!-- 销售金额 按日期统计 -->
  <select id="countPriceByDate" parameterType="com.semioe.api.entity.OrderInfo" resultType="com.semioe.api.vo.OrderCountVO">
  	SELECT
		DATE_FORMAT( ord.create_time, '%Y-%m-%d') AS countDate , 
		SUM( case when ord.price is null then 0 else ord.price end  ) AS countPrice
    FROM
      	order_info as ord
    WHERE 1=1
    	<include refid="CountOrder_Where_Clause" />
	GROUP BY 
		DATE_FORMAT( ord.create_time, '%Y-%m-%d')
	ORDER BY
		DATE_FORMAT( ord.create_time, '%Y-%m-%d')
  </select>
  
  <!-- 销售总数量统计 -->
  <select id="countTotalAmountByDate" parameterType="com.semioe.api.entity.OrderInfo" resultType="java.lang.Double">
  	SELECT
    	SUM( case when ord.order_count is null then 0 else ord.order_count end ) AS countNumber
    FROM
      	order_info as ord
    WHERE 1=1
    	<include refid="CountOrder_Where_Clause" />	
  </select>
  
  <!-- 销售数量 按日期统计 -->
  <select id="countAmountByDate" parameterType="com.semioe.api.entity.OrderInfo" resultType="com.semioe.api.vo.OrderCountVO">
  	SELECT
		DATE_FORMAT( ord.create_time, '%Y-%m-%d') AS countDate , 
		SUM( case when ord.order_count is null then 0 else ord.order_count end ) AS countNumber
    FROM
      	order_info as ord
    WHERE 1=1
    	<include refid="CountOrder_Where_Clause" />
	GROUP BY 
		DATE_FORMAT( ord.create_time, '%Y-%m-%d')
	ORDER BY
		DATE_FORMAT( ord.create_time, '%Y-%m-%d')
  </select>
  
  <!-- 订单相关统计 -->
  <select id="countOrderInfoByEntity" parameterType="com.semioe.api.entity.OrderInfo" resultType="com.semioe.api.vo.OrderCountVO">
  	SELECT
		DATE_FORMAT( ord.create_time, '%Y-%m-%d') AS countDate , 
		SUM( case when ord.order_count is null then 0 else ord.order_count end ) AS countNumber , 
		SUM( case when ord.price is null then 0 else ord.price end  ) AS countPrice
    FROM
      	order_info as ord
    WHERE 1=1
    	<include refid="CountOrder_Where_Clause" />
	GROUP BY 
		DATE_FORMAT( ord.create_time, '%Y-%m-%d')
	ORDER BY
		DATE_FORMAT( ord.create_time, '%Y-%m-%d')
	<if test="currentResult != null and currentResult &gt;= 0 and showCount != null and showCount &gt; 0 ">
   		limit #{currentResult,jdbcType=INTEGER},#{showCount,jdbcType=INTEGER}
    </if>
  </select>
  
   <!-- 订单相关统计 (分页合计查询) -->
  <select id="pageCountOrderInfoByEntity" parameterType="com.semioe.api.entity.OrderInfo" resultType="java.lang.Long">
  	SELECT count(a.countDate) FROM
  	(
	  	SELECT
			DATE_FORMAT( ord.create_time, '%Y-%m-%d') AS countDate , 
			SUM(ord.order_count) AS countNumber , SUM(ord.price) AS countPrice
	    FROM
	      	order_info as ord
	    WHERE 1=1
	    	<include refid="CountOrder_Where_Clause" />
		GROUP BY 
			DATE_FORMAT( ord.create_time, '%Y-%m-%d')
		ORDER BY
			DATE_FORMAT( ord.create_time, '%Y-%m-%d')
  	) AS a
  </select>
  
  <sql id="CountOrder_Where_Clause">
  	AND
 		DATE_FORMAT( ord.create_time, '%Y-%m-%d') &gt;= DATE_FORMAT( #{startDate,jdbcType=VARCHAR}, '%Y-%m-%d')
    AND
      	DATE_FORMAT( ord.create_time, '%Y-%m-%d') &lt;= DATE_FORMAT( #{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
    <if test="relationSupplierId != null and relationSupplierId != '' ">
    	AND ord.relation_supplier_id = #{relationSupplierId,jdbcType=VARCHAR}
    </if>  	
    <if test="backManagerId != null and backManagerId != '' " >
		AND ord.back_manager_id = #{backManagerId,jdbcType=VARCHAR}
	</if>
    <if test="type != null and type != '' ">
    	AND ord.type = #{type,jdbcType=VARCHAR}
    </if>
    AND ord.in_use = 1 AND ord.pay_status = 1 AND ord.type != '3'
  </sql>
  
  <select id="selectOutTimeOrders" resultMap="BaseResultMap">
    SELECT 
    	<include refid="Base_Column_List" /> 
    FROM order_info 
    WHERE out_time &lt;= NOW() and in_use = 1 and pay_status = 0 and type != '3'
  </select>
  
  <!-- 家庭医生 -->
  <select id="selectJyOrderInfo" parameterType="java.util.Map" resultMap="VoResultMap" >
  	SELECT 
		ord.id, ord.order_code, ord.relation_id, ord.relation_name,ord.relation_desc, ord.relation_supplier, 
	    ord.relation_supplier_id, ord.relation_img_url, ord.relation_code, ord.relation_code_name,
	    ord.relation_price, ord.type, ord.price, ord.order_count, ord.pay_status,
	    ord.user_id, ord.create_time, ord.update_time, ord.in_use , ord.source_type , ord.source_user_id
	FROM
		order_info AS ord
	INNER JOIN user_doctor_rel AS udr 
	ON ord.source_user_id = udr.doctor_id 
	AND ord.user_id = udr.manager_id
	AND udr.create_time &lt;= NOW() 
	AND udr.expiration_date &gt;= NOW() 
	WHERE ord.in_use = 1 
	<if test="doctorId != null and doctorId != '' " >
		AND ord.back_manager_id = #{doctorId,jdbcType=VARCHAR}
	</if> 
	<if test="userId != null and userId != '' " >
		AND ord.user_id = #{userId,jdbcType=VARCHAR}
	</if>
	<if test="serviceName != null and serviceName != '' " >
		AND ord.relation_name = #{serviceName,jdbcType=VARCHAR}
	</if>
	<if test="buyStartTime != null and buyStartTime != '' " >
		AND ord.create_time &gt;= #{buyStartTime,jdbcType=TIMESTAMP}
	</if>
	<if test="buyEndTime != null and buyEndTime != '' " >
		AND ord.create_time &lt;= #{buyEndTime,jdbcType=TIMESTAMP}
	</if>
	ORDER BY ord.create_time DESC
  </select>
  
  <select id="selectBackOrderInfo" parameterType="java.util.Map" resultMap="VoResultMap" >
  	SELECT 
		ord.id, ord.order_code, ord.relation_id, ord.relation_name,ord.relation_desc, ord.relation_supplier, 
	    ord.relation_supplier_id, ord.relation_img_url, ord.relation_code, ord.relation_code_name,
	    ord.relation_price, ord.type, ord.price, ord.order_count, ord.pay_status,
	    ord.user_id, ord.create_time, ord.update_time, ord.in_use , ord.source_type , ord.source_user_id
	FROM
		order_info AS ord
	<!-- INNER JOIN user_doctor_rel AS udr 
	ON ord.create_time &lt;= udr.create_time
	AND ord.user_id = udr.manager_id -->
	WHERE ord.in_use = 1
	<if test="doctorId != null and doctorId != '' " >
		AND ord.back_manager_id = #{doctorId,jdbcType=VARCHAR}
	</if>
	<if test="userId != null and userId != '' " >
		AND ord.user_id = #{userId,jdbcType=VARCHAR}
	</if>
	<if test="serviceName != null and serviceName != '' " >
		AND ord.relation_name = #{serviceName,jdbcType=VARCHAR}
	</if>
	<if test="buyStartTime != null and buyStartTime != '' " >
		AND ord.create_time &gt;= #{buyStartTime,jdbcType=TIMESTAMP}
	</if>
	<if test="buyEndTime != null and buyEndTime != '' " >
		AND ord.create_time &lt;= #{buyEndTime,jdbcType=TIMESTAMP}
	</if>
	ORDER BY ord.create_time DESC
  </select>
  
</mapper>