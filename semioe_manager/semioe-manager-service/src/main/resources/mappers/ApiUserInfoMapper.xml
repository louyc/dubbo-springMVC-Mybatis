<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.ApiUserInfoMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.ApiUserInfo">
    <id column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="height" jdbcType="VARCHAR" property="height" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="family_history" jdbcType="VARCHAR" property="familyHistory" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    manager_id, open_id,parent_id, role_id, name, city,birthday, sex, image_url, address, company, 
    email, mobile, create_time, update_time, in_use,height,family_history
  </sql>
  <select id="selectByExample" parameterType="com.semioe.api.entity.ApiUserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectSubUserInfo" parameterType="java.lang.String" resultType="java.util.Map">
    select
    manager_id as managerId,open_id as openId, parent_id as parentId, role_id as roleId, name , sex, 
    image_url as imageUrl, city,address, company, birthday,height,
    email, mobile,r.item_name as roleName
    from api_user_info u left join api_role_info r on u.role_id = r.id
   where parent_id = #{managerId,jdbcType=VARCHAR} and u.in_use=1
  </select>
  <select id="selectParentUserInfo" parameterType="java.lang.String" resultType="java.util.Map">
    select
    u.manager_id as managerId,u.open_id as openId, u.parent_id as parentId, u.role_id as roleId, u.name ,u.sex, 
    u.image_url as imageUrl, u.address, u.company, u.birthday,u.city,u.height,
    u.email, u.mobile,r.item_name as roleName
    from api_user_info u left join api_role_info r on u.role_id = r.id
	where u.manager_id =
	(select parent_id from api_user_info a
     where a.manager_id =#{managerId,jdbcType=VARCHAR} and a.in_use=1) and u.in_use=1
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_user_info
    where manager_id = #{managerId,jdbcType=VARCHAR}
    and in_use=1
  </select>
  <select id="selectByMoible" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_user_info
    where mobile = #{mobile,jdbcType=VARCHAR}
    and in_use=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from api_user_info
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.ApiUserInfoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from api_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.ApiUserInfo">
    <selectKey keyProperty="managerId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_user_info (manager_id,open_id,parent_id, role_id, name, city,height,family_history,
      birthday, sex, image_url,
      address, company, email, 
      mobile, create_time, update_time, 
      in_use)
    values (#{managerId,jdbcType=VARCHAR},#{openId,jdbcType=VARCHAR},#{parentId,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
      #{city,jdbcType=VARCHAR}, #{height,jdbcType=VARCHAR},#{familyHistory,jdbcType=VARCHAR},
      #{birthday,jdbcType=DATE}, #{sex,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{inUse,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.ApiUserInfo">
    <selectKey keyProperty="managerId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="familyHistory != null">
        family_history,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="familyHistory != null">
        #{familyHistory,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.ApiUserInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from api_user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update api_user_info
    <set>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=VARCHAR},
      </if>
      <if test="record.openId!= null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=VARCHAR},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.familyHistory != null">
        family_history = #{record.familyHistory,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update api_user_info
    set manager_id = #{record.managerId,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      open_id = #{record.openId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      sex = #{record.sex,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=VARCHAR},
      family_history = #{record.familyHistory,jdbcType=VARCHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateSubUser" parameterType="com.semioe.api.entity.ApiUserInfo">
    update api_user_info
    set  open_id = #{openId,jdbcType=VARCHAR}
    where 
      parent_id = #{managerId,jdbcType=INTEGER}
      and in_use=1
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.ApiUserInfo">
    update api_user_info
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="familyHistory != null">
        family_history = #{familyHistory,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
    </set>
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.ApiUserInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update api_user_info
    set parent_id = #{parentId,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=VARCHAR},
      height = #{height,jdbcType=VARCHAR},
      familyHistory = #{familyHistory,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER}
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </update>
   <update id="updateInUse" parameterType="map" >
    update api_user_info
    set 
		in_use = #{inUse,jdbcType=INTEGER},
		update_time =#{updateTime,jdbcType=TIMESTAMP},
		parent_id=NULL,
		role_id=NULL
      where 
      manager_id = #{managerId,jdbcType=INTEGER}
  </update>
  
  <select id="countRegsitUserListPage" parameterType="com.semioe.api.vo.ApiUserInfoVO"
  resultType="com.semioe.api.vo.UserCountVO">
	select  DATE_FORMAT(create_time, '%Y-%m-%d') as countDate,sum(1) as countNumber
	from api_user_info where  
	DATE_FORMAT(create_time, '%Y-%m-%d')  &gt;= DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(create_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and in_use=1
	group by countDate
  </select>
  <select id="countRegsitUser" parameterType="com.semioe.api.vo.ApiUserInfoVO"
   resultType="com.semioe.api.vo.UserCountVO">
	select  DATE_FORMAT(create_time, '%Y-%m-%d') as countDate,sum(1)  as countNumber
	from api_user_info where  
	DATE_FORMAT(create_time, '%Y-%m-%d')  &gt;= DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(create_time, '%Y-%m-%d') &lt;= DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and in_use=1
	group by countDate
  </select>
  
  <select id="regsitDetail" parameterType="com.semioe.api.vo.ApiUserInfoVO"
  resultMap="BaseResultMap">
	select  *
	from api_user_info where  
	DATE_FORMAT(create_time, '%Y-%m-%d')  = DATE_FORMAT(#{createTime,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and in_use=1
  </select>
  <select id="regsitDetailListPage" parameterType="com.semioe.api.vo.ApiUserInfoVO"
  resultMap="BaseResultMap">
	select  *
	from api_user_info where  
	DATE_FORMAT(create_time, '%Y-%m-%d')  = DATE_FORMAT(#{createTime,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and in_use=1
	order by create_time desc
  </select>
  <select id="countConversion" parameterType="com.semioe.api.vo.ApiUserInfoVO"
   resultType="com.semioe.api.vo.UserCountVO">
	select us.count_date as countDate,IFNULL(us.count_number,0) as visitorCount,
	IFNULL(uorder.number,0) as purchaserCount,
	FORMAT(IFNULL(uorder.number/us.count_number,0),2) as conversionRate
	from (
	select  DATE_FORMAT(update_time, '%Y-%m-%d') as count_date,sum(1) as count_number
	from api_user_info where  
	DATE_FORMAT(update_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(update_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and in_use=1
	 group by count_date) us left join (
	select sum.order_date,sum(1)  number from (
	select  DATE_FORMAT(oi.create_time, '%Y-%m-%d') as order_date,user_id,sum(1)as order_number
	from order_info oi where  
	DATE_FORMAT(oi.create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(oi.create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and oi.in_use=1 and oi.pay_status=1
	group by order_date,user_id ) sum group by sum.order_date) uorder 
	on us.count_date = uorder.order_date 
  </select>
  <select id="countConversionListPage" parameterType="com.semioe.api.vo.ApiUserInfoVO"
  resultType="com.semioe.api.vo.UserCountVO">
	select us.count_date as countDate,IFNULL(us.count_number,0) as visitorCount,
	IFNULL(uorder.number,0) as purchaserCount,
	FORMAT(IFNULL(uorder.number/us.count_number,0),2) as conversionRate from (
	select  DATE_FORMAT(update_time, '%Y-%m-%d') as count_date,sum(1) as count_number
	from api_user_info where  
	DATE_FORMAT(update_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(update_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and in_use=1
	 group by count_date) us left join (
select sum.order_date,sum(1)  number from (
select  DATE_FORMAT(oi.create_time, '%Y-%m-%d') as order_date,user_id,sum(1)as order_number
	from order_info oi where  
	DATE_FORMAT(oi.create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(oi.create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and oi.in_use=1 and oi.pay_status=1
	group by order_date,user_id ) sum group by sum.order_date) uorder 
	on us.count_date = uorder.order_date 
  </select>
    <select id="selectAllBySex"  parameterType="com.semioe.api.vo.ApiUserInfoVO" 
     resultType="com.semioe.api.vo.UserCountVO">
   SELECT u.count_date as countDate,
 GROUP_CONCAT(u.sex, ":", u.count_number) AS sexs
FROM
(
select  DATE_FORMAT(create_time, '%Y-%m-%d') as count_date,sex,sum(1) as count_number
	from api_user_info where  
	DATE_FORMAT(create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and in_use=1
	 group by count_date,sex
) u
GROUP BY
 u.count_date
  </select>
    <select id="selectAllByAge"  parameterType="com.semioe.api.vo.ApiUserInfoVO" 
     resultType="com.semioe.api.vo.UserCountVO">
     SELECT u.count_date as countDate,
 GROUP_CONCAT(u.age) AS ages
FROM
(
select  DATE_FORMAT(create_time, '%Y-%m-%d') as count_date,
    IFNULL((year(now())-year(birthday)-1) + ( DATE_FORMAT(birthday, '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ),-1) as age  
from  api_user_info
    where  
	DATE_FORMAT(create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	and in_use=1
order by count_date 
)u
GROUP BY
 u.count_date
  </select>
    <select id="selectAllByArea"  parameterType="com.semioe.api.vo.ApiUserInfoVO"  resultType="com.semioe.api.vo.UserCountVO"> 
SELECT
	f.count_date as countDate,
  IF(f.n IS NULL,f.m,IF(f.n = '', f.m,GROUP_CONCAT(f.m, ",", f.n))) AS provinces
FROM
	(
			select 	 data2.count_data as count_date,GROUP_CONCAT(data2.city, ":", data2.sum) as m,data4.citys as n from (	
	select data as count_data,city ,sum(sum) as sum from (
		select	DATE_FORMAT(create_time, '%Y-%m-%d') AS data,
						IF (city IS NULL,'保密',IF (city = '', '保密', city)) AS city,
						sum(1) AS sum
					FROM
						api_user_info u
					WHERE
				DATE_FORMAT(create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
			and DATE_FORMAT(create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
			AND in_use = 1
					GROUP BY
						data,city) data1 group by count_data,city
	) data2,
(select 	 GROUP_CONCAT(data3.citys, ":", 0) as citys from (
					SELECT DISTINCT
					IF (city IS NULL,'保密',IF (city = '', '保密', city)) AS citys
					FROM
						api_user_info
					where in_use=1
)data3)data4
 group by count_date
	) f
GROUP BY
	f.count_date
  </select>
  
  <select id="getManagerIdByMobile" parameterType="java.lang.String" resultType="java.lang.String">
  	SELECT a.`manager_id` FROM `api_user_info` a WHERE a.`mobile` = #{0} LIMIT 1
  </select>
  
   <select id="getApiUserByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_user_info
    where open_id = #{openId,jdbcType=VARCHAR}
    and in_use=1 limit 1
  </select>
  <!-- 20171109 -->
   <update id="updateUserByMobile" parameterType="com.semioe.api.entity.ApiUserInfo">
    update api_user_info
    set  manager_id = #{managerId,jdbcType=VARCHAR}
    where 
      mobile = #{mobile,jdbcType=VARCHAR}
      and in_use=1
  </update>
  <select id="selectByEntity" parameterType="com.semioe.api.entity.ApiUserInfo" resultMap="BaseResultMap">
	    select
	    <include refid="Base_Column_List" />
	    from api_user_info 
	    where 1=1
	    <if test="managerId != null and managerId !=''">
	     and  manager_id = #{managerId,jdbcType=VARCHAR}
	    </if>
	    <if test="inUse != null and inUse >-1">
	     and in_use = #{inUse,jdbcType=INTEGER}
	    </if>
	    <if test="openId != null and openId!=''">
	     and open_id = #{openId,jdbcType=VARCHAR}
        </if>
        <if test="parentId != null and parentId!=''">
         and parent_id = #{parentId,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null and roleId>0">
         and role_id = #{roleId,jdbcType=INTEGER}
        </if>
        <if test="name != null and name!=''">
         and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="mobile != null and mobile!=''">
       	 and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
  </select>
  
  
  <update id="updateByApiUserinfoVO" parameterType="com.semioe.api.vo.ApiUserInfoVO">
    update api_user_info
    <set>
      <if test="accountManagerId != null and accountManagerId !=''">
        manager_id = #{accountManagerId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null and parentId !=''">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="openId != null and openId!=''">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name!=''">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null and sex!=''">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="height != null and height!=''">
        height = #{height,jdbcType=VARCHAR},
      </if>
      <if test="familyHistory != null and familyHistory!=''">
        family_history = #{familyHistory,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null and imageUrl!=''">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="city != null and city!=''">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address!=''">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email!=''">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null and mobile!=''">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
    </set>
    where manager_id = #{managerId,jdbcType=VARCHAR}
  </update>
  
  <insert id="insertInfoVoSelective" parameterType="com.semioe.api.vo.ApiUserInfoVO">
    <selectKey keyProperty="managerId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="height != null">
        height,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="familyHistory != null">
        family_history,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="height != null">
        #{height,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="familyHistory != null">
        #{familyHistory,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <!-- 20171216 -->
  <select id="countSignListPage" parameterType="com.semioe.api.vo.ApiUserInfoVO"
   resultType="com.semioe.api.vo.UserCountVO">
	SELECT  DATE_FORMAT(create_time, '%Y-%m-%d')  AS countDate,COUNT(1) as signCount
	FROM user_doctor_rel 
	WHERE  in_use = 1
	<if test="buildType != null and buildType!='' and buildType >0">
	 and build_type=  #{buildType,jdbcType=INTEGER}
	</if>
	<if test="buildType != null and buildType!='' and buildType ==0">
	 and build_type !=2
	</if>
	and DATE_FORMAT(create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
	and DATE_FORMAT(create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
	GROUP BY countDate
	ORDER BY countDate DESC
  </select>
  <select id="signDetaileListPage" parameterType="com.semioe.api.vo.ApiUserInfoVO"
  resultType="com.semioe.api.vo.ApiContractedUserVO">
	SELECT da.*,bd.`name` AS orgName
	FROM( 
		<if test="buildType==0 or buildType==1">
			SELECT r.id,au.`manager_id` AS managerId,au.`name` AS signName,
			au.`sex`,ai.mobile,
			IFNULL((YEAR(NOW())-YEAR(au.birthday)-1) + ( DATE_FORMAT(au.birthday, '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ),-1) AS age,
			au.`present_address` AS presentAddress,
			b.`name` AS doctorName,od.`org_id` AS orgId,au.`create_time` AS createTime
			,GROUP_CONCAT(uh.`description`) AS diseaseNames,au.card_id as cardId
			FROM user_doctor_rel r
			LEFT JOIN api_contracted_user au ON r.`contracted_user_id` = au.`id`
			LEFT JOIN api_user_info ai ON r.`manager_id` = ai.`manager_id`
			LEFT JOIN jy_org_doc_rel od ON r.`doctor_id` = od.`doctor_id`
			LEFT JOIN backstage_user_info b ON r.`doctor_id` = b.`manager_id`
			LEFT JOIN user_healthy_living uh ON r.`contracted_user_id` = uh.`contracted_user_id` AND uh.`type_id`=3
			WHERE r.`in_use`=1 AND r.`build_type` =1 AND
			DATE_FORMAT(r.create_time, '%Y-%m-%d')  =   DATE_FORMAT(#{countDate,jdbcType=VARCHAR}, '%Y-%m-%d')
			GROUP BY r.`id`
		</if>
		<if test="buildType==0">
			UNION 
		</if>
		<if test="buildType==0 or buildType==3">
			SELECT r.id,r.manager_id  AS managerId,am.name AS signName,2 AS sex,am.mobile,
			am.age ,am.`present_address` AS presentAddress,bu.`name` AS doctorName,od.`org_id` AS orgId,
			am.sign_time AS createTime,NULL AS diseaseNames,am.document_code as cardId
			FROM user_doctor_rel r
			LEFT JOIN api_motherhood_user am ON r.`contracted_user_id` = am.id
			LEFT JOIN jy_org_doc_rel od ON r.`doctor_id` = od.`doctor_id`
			LEFT JOIN backstage_user_info bu ON r.`doctor_id` = bu.manager_id
			WHERE r.`in_use` =1 AND r.`build_type` =3 and
			DATE_FORMAT(r.create_time, '%Y-%m-%d')  =   DATE_FORMAT(#{countDate,jdbcType=VARCHAR}, '%Y-%m-%d')
		</if>
	)da
	LEFT JOIN backstage_user_info bd ON da.orgId = bd.`manager_id`
	ORDER BY da.createTime DESC
  </select>
  
  <!-- 家庭组统计 -->
  <select id="selectAllByFamilyListPage" parameterType="com.semioe.api.vo.ApiUserInfoVO"
  resultType="com.semioe.api.vo.UserCountVO">
	
	SELECT GROUP_CONCAT(da1.parentId) AS parentIds,COUNT(1) AS countNumber,da1.createTime 
	FROM (
		SELECT da.parentId,GROUP_CONCAT(da.childId) AS childs ,DATE_FORMAT(da.create_time, '%Y-%m-%d') AS createTime FROM 
		(SELECT p.manager_id AS parentId,c.manager_id AS childId,p.`create_time` 
		FROM api_user_info p
		LEFT JOIN api_user_info c ON p.manager_id = c.parent_id
		WHERE p.in_use=1 AND c.in_use=1 
		)da
		where 
		DATE_FORMAT(da.create_time, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m-%d') 
		and DATE_FORMAT(da.create_time, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m-%d')
		GROUP BY da.parentId ORDER BY da.create_time DESC
	)da1
	GROUP BY da1.createTime
  </select>
</mapper>