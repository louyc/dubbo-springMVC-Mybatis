<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.DeviceDataMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="device_id" jdbcType="INTEGER" property="deviceId" />
    <result column="device_locationId" jdbcType="VARCHAR" property="deviceLocationid" />
    <result column="data_from" jdbcType="VARCHAR" property="dataFrom" />
    <result column="is_affirm" jdbcType="CHAR" property="isAffirm" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="conclusion" jdbcType="VARCHAR" property="conclusion" />
    <result column="data_type" jdbcType="VARCHAR" property="dataType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="data_value" jdbcType="LONGVARCHAR" property="dataValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, manager_id, device_id, device_locationId, data_from, is_affirm, create_time, 
    update_time, conclusion, data_type
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    data_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.semioe.api.entity.DeviceDataExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.semioe.api.entity.DeviceDataExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from device_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from device_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.DeviceDataExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from device_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device_data (manager_id, device_id, device_locationId, 
      data_from, is_affirm, create_time, 
      update_time, conclusion, data_type, 
      data_value)
    values (#{managerId,jdbcType=VARCHAR}, #{deviceId,jdbcType=INTEGER}, #{deviceLocationid,jdbcType=VARCHAR}, 
      #{dataFrom,jdbcType=VARCHAR}, #{isAffirm,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{conclusion,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{dataValue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceLocationid != null">
        device_locationId,
      </if>
      <if test="dataFrom != null">
        data_from,
      </if>
      <if test="isAffirm != null">
        is_affirm,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="conclusion != null">
        conclusion,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="dataValue != null">
        data_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="deviceLocationid != null">
        #{deviceLocationid,jdbcType=VARCHAR},
      </if>
      <if test="dataFrom != null">
        #{dataFrom,jdbcType=VARCHAR},
      </if>
      <if test="isAffirm != null">
        #{isAffirm,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conclusion != null">
        #{conclusion,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="dataValue != null">
        #{dataValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.DeviceDataExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from device_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceLocationid != null">
        device_locationId = #{record.deviceLocationid,jdbcType=VARCHAR},
      </if>
      <if test="record.dataFrom != null">
        data_from = #{record.dataFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.isAffirm != null">
        is_affirm = #{record.isAffirm,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.conclusion != null">
        conclusion = #{record.conclusion,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.dataValue != null">
        data_value = #{record.dataValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device_data
    set id = #{record.id,jdbcType=INTEGER},
      manager_id = #{record.managerId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=INTEGER},
      device_locationId = #{record.deviceLocationid,jdbcType=VARCHAR},
      data_from = #{record.dataFrom,jdbcType=VARCHAR},
      is_affirm = #{record.isAffirm,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      conclusion = #{record.conclusion,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=VARCHAR},
      data_value = #{record.dataValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device_data
    set id = #{record.id,jdbcType=INTEGER},
      manager_id = #{record.managerId,jdbcType=VARCHAR},
      device_id = #{record.deviceId,jdbcType=INTEGER},
      device_locationId = #{record.deviceLocationid,jdbcType=VARCHAR},
      data_from = #{record.dataFrom,jdbcType=VARCHAR},
      is_affirm = #{record.isAffirm,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      conclusion = #{record.conclusion,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device_data
    <set>
      <if test="managerId != null">
        manager_id = #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="deviceLocationid != null">
        device_locationId = #{deviceLocationid,jdbcType=VARCHAR},
      </if>
      <if test="dataFrom != null">
        data_from = #{dataFrom,jdbcType=VARCHAR},
      </if>
      <if test="isAffirm != null">
        is_affirm = #{isAffirm,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conclusion != null">
        conclusion = #{conclusion,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="dataValue != null">
        data_value = #{dataValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device_data
    set manager_id = #{managerId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=INTEGER},
      device_locationId = #{deviceLocationid,jdbcType=VARCHAR},
      data_from = #{dataFrom,jdbcType=VARCHAR},
      is_affirm = #{isAffirm,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      conclusion = #{conclusion,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      data_value = #{dataValue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.DeviceData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device_data
    set manager_id = #{managerId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=INTEGER},
      device_locationId = #{deviceLocationid,jdbcType=VARCHAR},
      data_from = #{dataFrom,jdbcType=VARCHAR},
      is_affirm = #{isAffirm,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      conclusion = #{conclusion,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getDataByUserTime" parameterType="java.lang.String" resultType="com.semioe.api.entity.DeviceData">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue 
	FROM
	  `device_data` d 
	WHERE d.`manager_id` = #{0} 
	  AND d.`data_type` = #{2} 
	  <if test="param2 != null and '' != param2">
	  	 AND DATE_FORMAT(d.`create_time`, '%Y-%m-%d') = #{1}
      </if>
	ORDER BY d.`id` DESC 
	LIMIT 1 
  </select>
  
  <select id="getDataByUserTimeByMin" parameterType="java.lang.String" resultType="com.semioe.api.entity.DeviceData">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue 
	FROM
	  `device_data` d 
	WHERE d.`manager_id` = #{0} 
	  AND d.`data_type` = #{2} 
	  AND d.`create_time` = #{1}
	ORDER BY d.`id` DESC 
	LIMIT 1 
  </select>
  
  <select id="getDataByUserTimeList" parameterType="java.lang.String" resultType="com.semioe.api.entity.DeviceData">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue 
	FROM
	  `device_data` d 
	WHERE d.`id` IN (SELECT MAX(dd.`id`) FROM `device_data` dd WHERE dd.`manager_id` = #{0} GROUP BY dd.`data_type`) 
	  <if test="param2 != null and '' != param2">
	  	 AND DATE_FORMAT(d.`create_time`, '%Y-%m-%d') = #{1}
      </if>
      AND d.`data_type` NOT IN ('ECG', 'BODY', 'SLEEP', 'DRINK', 'SMOKE', 'MEDICINE', 'LABORATORY_REPORT', 'MEDICAL_IMAGE', 'ABNORMAL', 'SPORT', 'cTnI', 'NT_proBNP' ,'cTnI_NT_proBNP' ,'cTnI_CKMB_Myo' ,'D_Dimer' ,'PCT' ,'mAlb' ,'NGAL' ,'CysC' ,'β2_MG' ,'hs_CRP' ,'HCG' ,'H_FABP' ,'BNP' ,'PCT_CRP' ,'CK_MB_cTnI_H_FABP' ,'NT_proBNP_BNP' ,'NGAL_mAlb' ,'h_cTnI')
  	ORDER BY d.`id` DESC
  </select>
  
  <select id="getHistoryMeasureDataByDay" parameterType="java.lang.String" resultType="com.semioe.api.entity.DeviceData">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue 
	FROM
	  `device_data` d 
	WHERE d.`manager_id` = #{0}
	  AND DATE_FORMAT(d.`create_time`, '%Y-%m-%d') = #{1}
	  AND d.`data_type` NOT IN ('ECG', 'BODY', 'cTnI', 'NT_proBNP' ,'cTnI_NT_proBNP' ,'cTnI_CKMB_Myo' ,'D_Dimer' ,'PCT' ,'mAlb' ,'NGAL' ,'CysC' ,'β2_MG' ,'hs_CRP' ,'HCG' ,'H_FABP' ,'BNP' ,'PCT_CRP' ,'CK_MB_cTnI_H_FABP' ,'NT_proBNP_BNP' ,'NGAL_mAlb' ,'h_cTnI')
	ORDER BY d.`id` DESC 
  </select>
  
  <select id="getHistoryMeasureData" parameterType="java.lang.String" resultType="com.semioe.api.entity.DeviceData">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue 
	FROM
	  `device_data` d 
	WHERE d.`manager_id` = #{0}
	  AND DATE_FORMAT(d.`create_time`, '%Y-%m') = #{1}
	  AND d.`data_type` NOT IN ('ECG', 'BODY', 'cTnI', 'NT_proBNP' ,'cTnI_NT_proBNP' ,'cTnI_CKMB_Myo' ,'D_Dimer' ,'PCT' ,'mAlb' ,'NGAL' ,'CysC' ,'β2_MG' ,'hs_CRP' ,'HCG' ,'H_FABP' ,'BNP' ,'PCT_CRP' ,'CK_MB_cTnI_H_FABP' ,'NT_proBNP_BNP' ,'NGAL_mAlb' ,'h_cTnI')
	ORDER BY d.`id` DESC 
  </select>
  
  <select id="getDataByType" parameterType="java.lang.String" resultType="com.semioe.api.entity.DeviceData">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue 
	FROM
	  `device_data` d 
	WHERE d.`manager_id` = #{0} 
	  AND d.`data_type` = #{1} 
	ORDER BY d.`id` DESC 
  </select>
  <select id="selectByCondition" parameterType="com.semioe.api.vo.DeviceDataVO" resultType="com.semioe.api.vo.DeviceDataVO">
	SELECT 
	  DISTINCT(d.`manager_id`) as managerId,
	 d.`device_locationId` as deviceLocationId,
	  u.`name`,
	  u.mobile,
    (year(now())-year(DATE_FORMAT(birthday,"%Y-%m-%d"))-1) + ( DATE_FORMAT(DATE_FORMAT(birthday,"%Y-%m-%d"), '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ) as age,  
	  u.sex
	FROM
	  `device_data` d
	  left join  api_user_info u
		on d.manager_id = u.manager_id
	WHERE d.`device_locationId` = #{deviceLocationId,jdbcType=VARCHAR}
	  <if test="name != null and name !=''">
	  AND u.name = #{name,jdbcType=VARCHAR}
	  </if>
	  <if test="mobile != null and mobile !=''">
	  AND u.mobile = #{mobile,jdbcType=VARCHAR}
	  </if>
		and 1=1 ORDER BY d.`id` DESC 
  </select>
  <select id="selectByConditionListPage" parameterType="com.semioe.api.vo.DeviceDataVO" resultType="com.semioe.api.vo.DeviceDataVO">
	SELECT 
	DISTINCT(d.`manager_id`) as managerId,
	 d.`device_locationId` as deviceLocationId,
	  u.`name`,
	  u.mobile,
    (year(now())-year(DATE_FORMAT(birthday,"%Y-%m-%d"))-1) + ( DATE_FORMAT(DATE_FORMAT(birthday,"%Y-%m-%d"), '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ) as age,  
	  u.sex
	FROM
	  `device_data` d
	  left join  api_user_info u
		on d.manager_id = u.manager_id
	WHERE d.`device_locationId` = #{deviceLocationId,jdbcType=VARCHAR}
	  <if test="name != null and name !=''">
	  AND u.name = #{name,jdbcType=VARCHAR}
	  </if>
	  <if test="mobile != null and mobile !=''">
	  AND u.mobile = #{mobile,jdbcType=VARCHAR}
	  </if>
		and 1=1 ORDER BY d.`id` DESC 
  </select>
  <select id="selectMeasureInfo" parameterType="com.semioe.api.vo.DeviceDataVO" resultType="com.semioe.api.vo.DeviceDataVO">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.device_locationId deviceLocationId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue,
	  u.`name`,
	  u.mobile
	FROM
	  `device_data` d
	  left join  api_user_info u
		on d.manager_id = u.manager_id
	WHERE d.`manager_id` = #{managerId,jdbcType=VARCHAR}
	  <if test="startTime != null and startTime !=''">
	  AND 	DATE_FORMAT(d.`create_time`, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d') 
	  </if>
	  <if test="endTime != null and endTime !=''">
	  	and DATE_FORMAT(d.`create_time`, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
	  </if>
	  <if test="dataType != null and dataType !=''">
		AND d.data_type = #{dataType,jdbcType=VARCHAR}
	  </if>
		and d.data_type in
                <foreach item="item" index="index" collection="dataTypes" 
                         open="(" separator="," close=")">
                        ${item}
                </foreach>
		and 1=1 ORDER BY d.`id` DESC 
  </select>
  <select id="selectMeasureInfoByConditionListPage" parameterType="com.semioe.api.vo.DeviceDataVO" resultType="com.semioe.api.vo.DeviceDataVO">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.device_locationId deviceLocationId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue,
	  u.mobile,
    u.`name` as name,
    u.sex as sex,
    IFNULL((year(now())-year(u.birthday)-1) + ( DATE_FORMAT(u.birthday, '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ),null) as age
	FROM
	  `device_data` d
	  left join  api_user_info u on d.manager_id = u.manager_id
	WHERE
	 d.`manager_id` = #{managerId,jdbcType=VARCHAR}
	  <if test="startTime != null and startTime !=''">
	  AND 	DATE_FORMAT(d.`create_time`, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d') 
	  </if>
	  <if test="endTime != null and endTime !=''">
	  	and DATE_FORMAT(d.`create_time`, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
	  </if>
	  <if test="dataType != null and dataType !=''">
		AND d.data_type = #{dataType,jdbcType=VARCHAR}
	  </if>
	  	and d.data_type in
                <foreach item="item" index="index" collection="dataTypes" 
                         open="(" separator="," close=")">
                        ${item}
                </foreach>
		and 1=1 ORDER BY d.`id` DESC 
  </select>
  
  <select id="selectJYMeasureInfoByConditionListPage" parameterType="com.semioe.api.vo.DeviceDataVO" resultType="com.semioe.api.vo.DeviceDataVO">
	SELECT 
	  d.`id` id,
	  d.`manager_id` managerId,
	  d.device_locationId deviceLocationId,
	  d.`data_from` dataFrom,
	  d.`device_id` deviceId,
	  d.`is_affirm` isAffirm,
	  d.`create_time` createTime,
	  d.`update_time` updateTime,
	  d.`conclusion` conclusion,
	  d.`data_type` dataType,
	  d.`data_value` dataValue,
	  u.mobile,
      c.`name` as name,
      c.sex as sex,
      IFNULL((year(now())-year(c.birthday)-1) + ( DATE_FORMAT(c.birthday, '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ),null) as age
	FROM
	  `device_data` d
	  left join  api_user_info u on d.manager_id = u.manager_id
	  left join  api_contracted_user  c on d.manager_id = c.manager_id
	WHERE
	 d.`manager_id` = #{managerId,jdbcType=VARCHAR}
	  <if test="startTime != null and startTime !=''">
	  AND 	DATE_FORMAT(d.`create_time`, '%Y-%m-%d')  &gt;=  DATE_FORMAT(#{startTime,jdbcType=VARCHAR}, '%Y-%m-%d') 
	  </if>
	  <if test="endTime != null and endTime !=''">
	  	and DATE_FORMAT(d.`create_time`, '%Y-%m-%d') &lt;=  DATE_FORMAT(#{endTime,jdbcType=VARCHAR}, '%Y-%m-%d')
	  </if>
	  <if test="dataType != null and dataType !=''">
		AND d.data_type = #{dataType,jdbcType=VARCHAR}
	  </if>
	  	and d.data_type in
                <foreach item="item" index="index" collection="dataTypes" 
                         open="(" separator="," close=")">
                        ${item}
                </foreach>
		and 1=1 ORDER BY d.`id` DESC 
  </select>
  <update id="updateHrData" parameterType="java.lang.String">
	UPDATE 
	  `device_data` d 
	SET
	  d.`data_value` = #{2}
	WHERE d.`manager_id` = #{0}
	  AND d.`create_time` = STR_TO_DATE(#{1}, '%Y-%m-%d %H:%i:%S')
	  AND d.`data_type` = 'HR'
	  AND d.`data_from` = 'YTJ' 
  </update>
</mapper>