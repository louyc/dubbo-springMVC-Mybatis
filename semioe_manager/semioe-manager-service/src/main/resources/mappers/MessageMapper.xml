<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semioe.dubbo.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.semioe.api.entity.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="message_from" jdbcType="VARCHAR" property="messageFrom" />
    <result column="message_to" jdbcType="VARCHAR" property="messageTo" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="message_from_name" jdbcType="VARCHAR" property="messageFromName"/>
    <result column="message_from_Img" jdbcType="VARCHAR" property="messageFromImg"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, message_from, message_to, type, content, status, user_status, create_time, update_time, 
    in_use
  </sql>
  <select id="selectByExample" parameterType="com.semioe.api.entity.MessageExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.semioe.api.entity.MessageExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.semioe.api.entity.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message (id,message_from, message_to, type, 
      content, status, user_status, 
      create_time, update_time, in_use
      )
    values (#{id,jdbcType=VARCHAR},#{messageFrom,jdbcType=VARCHAR}, #{messageTo,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR}, #{status,jdbcType=INTEGER}, #{userStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{inUse,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.semioe.api.entity.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="messageFrom != null">
        message_from,
      </if>
      <if test="messageTo != null">
        message_to,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="messageFrom != null">
        #{messageFrom,jdbcType=VARCHAR},
      </if>
      <if test="messageTo != null">
        #{messageTo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.semioe.api.entity.MessageExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.messageFrom != null">
        message_from = #{record.messageFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.messageTo != null">
        message_to = #{record.messageTo,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update message
    set id = #{record.id,jdbcType=VARCHAR},
      message_from = #{record.messageFrom,jdbcType=VARCHAR},
      message_to = #{record.messageTo,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      in_use = #{record.inUse,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.semioe.api.entity.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update message
    <set>
      <if test="messageFrom != null">
        message_from = #{messageFrom,jdbcType=VARCHAR},
      </if>
      <if test="messageTo != null">
        message_to = #{messageTo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.semioe.api.entity.Message">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update message
    set message_from = #{messageFrom,jdbcType=VARCHAR},
      message_to = #{messageTo,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      in_use = #{inUse,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

	<select id="selectMessageListPage" parameterType="com.semioe.api.entity.Message" resultMap="BaseResultMap">
		select
			mes.id, mes.message_from, mes.message_to, mes.type , mes.content, mes.status, 
			mes.user_status, mes.create_time, mes.update_time, 
			mes.in_use , bcus.`name` AS message_from_name , bcus.image_url AS message_from_Img
		from message AS mes
		LEFT JOIN backstage_user_info AS bcus ON mes.message_from = bcus.manager_id
		where 1=1
		<if test="id != null">
			and mes.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="messageFrom != null">
			and mes.message_from = #{messageFrom,jdbcType=VARCHAR}
		</if>
		<if test="messageTo != null">
			and mes.message_to = #{messageTo,jdbcType=VARCHAR}
		</if>
		<if test="type != null">
			and mes.type = #{type,jdbcType=INTEGER}
		</if>
		<if test="status != null">
			and mes.status = #{status,jdbcType=INTEGER}
		</if>
		order by mes.create_time desc
	</select>
	
	<update id="updateStatusByEntity" parameterType="com.semioe.api.entity.Message">
	    UPDATE message
	    SET 
	    	status = 1
	    WHERE 1=1
	    <if test="id != null and id != ''" >
	    	AND id = #{id,jdbcType=VARCHAR} 
	    </if>
	    <if test="messageFrom != null and messageFrom != ''" >
	    	AND message_from = #{messageFrom,jdbcType=VARCHAR} 
	    </if>
	    <if test="messageTo != null and messageTo != ''" >
	    	AND message_to = #{messageTo,jdbcType=VARCHAR} 
	    </if>
	    <if test="type != null and type != ''">
			AND type = #{type,jdbcType=INTEGER} 
		</if>
	  </update>
	  
	<!-- 统计返回对象 -->
	<resultMap id="countResultMap" type="com.semioe.api.entity.Message">
	    <id column="id" jdbcType="VARCHAR" property="id" />
	    <result column="message_from" jdbcType="VARCHAR" property="messageFrom" />
	    <result column="message_to" jdbcType="VARCHAR" property="messageTo" />
	    <result column="type" jdbcType="INTEGER" property="type" />
	    <result column="content" jdbcType="LONGVARCHAR" property="content" />
	    <result column="status" jdbcType="INTEGER" property="status" />
	    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	    <result column="in_use" jdbcType="INTEGER" property="inUse" />
	    <result column="message_from_name" jdbcType="VARCHAR" property="messageFromName"/>
	    <result column="message_from_Img" jdbcType="VARCHAR" property="messageFromImg"/>
	    
	    <result column="un_read_count" jdbcType="INTEGER" property="unReadCount" />
	    <result column="read_count" jdbcType="INTEGER" property="readCount" />
	    <result column="total_read_count" jdbcType="INTEGER" property="totalReadCount" />
	  </resultMap>
	  
	<select id="countMessageStatusListPage" parameterType="com.semioe.api.entity.Message" resultMap="countResultMap">
		select * from (
			select
				count(mes.id) AS total_read_count,  
				sum(mes.`status`) AS read_count , 
				count(mes.id) - sum(mes.`status`) AS un_read_count ,
				bcus.manager_id AS message_from ,  bcus.`name` AS message_from_name , bcus.image_url AS message_from_Img
			from message AS mes
			LEFT JOIN backstage_user_info AS bcus ON mes.message_from = bcus.manager_id
			where 1=1
			<if test="id != null and id != ''">
				and mes.id = #{id,jdbcType=VARCHAR}
			</if>
			<if test="messageFrom != null and messageFrom != ''">
				and mes.message_from = #{messageFrom,jdbcType=VARCHAR}
			</if>
			<if test="messageTo != null and  messageTo != ''">
				and mes.message_to = #{messageTo,jdbcType=VARCHAR}
			</if>
			<if test="type != null and type != '' ">
				and mes.type = #{type,jdbcType=INTEGER}
			</if>
			GROUP BY bcus.manager_id
		) as a
		ORDER BY a.un_read_count DESC
	</select>
	
	<select id="countUserMessageStatus" parameterType="com.semioe.api.entity.Message" resultMap="countResultMap">
		select
			count(mes.id) AS total_read_count,  
			sum(mes.`status`) AS read_count , 
			count(mes.id) - sum(mes.`status`) AS un_read_count 
		from message AS mes
		LEFT JOIN backstage_user_info AS bcus ON mes.message_from = bcus.manager_id
		where 1=1
		<if test="id != null">
			and mes.id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="messageFrom != null">
			and mes.message_from = #{messageFrom,jdbcType=VARCHAR}
		</if>
		<if test="messageTo != null">
			and mes.message_to = #{messageTo,jdbcType=VARCHAR}
		</if>
		and mes.type in ( 2 , 3 )
	</select>
	
	
</mapper>